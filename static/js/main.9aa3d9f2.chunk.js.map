{"version":3,"sources":["api/networkElements.js","store/networkElementsSlice.js","store/wizardSlice.js","api/scheduleLogger.js","sagas/sagas.js","store/store.js","components/Header.js","components/Sidebar.js","components/NetworkElementsList.js","components/NetworkElementSearch.js","components/NetworkElementControls.js","components/NetworkElementStep.js","components/OperationTypeControls.js","common/constants.js","components/OperationTypePicker.js","components/OperationTypeStep.js","components/SummaryControls.js","components/SummaryInfo.js","components/SummaryStep.js","components/ScheduleToast.js","theme.js","Wizard.js","reportWebVitals.js","index.js"],"names":["networkElements","id","ip","type","dn","name","swVersion","networkElementsSlice","createSlice","initialState","data","reducers","loadNetworkElements","state","clearNetworkElements","actions","wizardSlice","selectedNetworkElements","selectedOperation","undefined","activeStep","toast","open","success","scheduleSent","setSelectedNetworkElements","action","payload","setSelectedOperation","cancel","schedule","setScheduleSuccess","forward","back","setToastOpen","setToast","requestPutSchedule","axios","request","method","url","watchSchedule","handleSchedule","rootSaga","takeEvery","select","filter","el","wizard","includes","call","date","Date","now","put","console","error","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","networkElementsReducer","wizardReducer","middleware","getDefaultMiddleware","concat","run","useStyles","makeStyles","theme","root","boxShadow","backgroundColor","borderBottom","palette","grey","title","flexGrow","color","primary","dark","Header","classes","AppBar","position","className","Toolbar","Typography","variant","colorPrimary","borderRight","height","backButton","marginRight","spacing","Sidebar","steps","label","description","Stepper","orientation","map","step","Step","expanded","StepLabel","stepLabel","StepContent","headCells","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","headCell","align","numeric","disablePadding","flex","tableContainer","paper","width","marginBottom","table","minWidth","row","cursor","EnhancedTable","dispatch","useDispatch","updateSelectedNetworkElementsList","selectedNetworkElementId","selectedIndex","indexOf","newSelected","push","TableContainer","Table","size","stickyHeader","length","event","target","newSelecteds","n","TableBody","index","isItemSelected","labelId","hover","onClick","handleClick","role","tabIndex","selected","component","scope","search","borderRadius","shape","alpha","common","white","marginLeft","breakpoints","up","searchIcon","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","NetworkElementSearch","InputBase","placeholder","input","NetworkElementControls","isSelectedElement","Button","disabled","NetworkElementStep","useSelector","cancelButton","OperationTypeControls","isSelectedOperation","operationTypes","update_software","downgrade_software","operationType","margin","lighten","main","OperationTypeCheckbox","handleChange","Paper","OperationTypePicker","OperationTypeStep","SummaryControls","summary","marginTop","sectionHeader","SummaryInfo","selectedNetworkElementsData","SummaryStep","selectedNetworkElementsDataFiltered","Alert","elevation","ScheduleToast","scheduleToastOpen","handleClose","reason","onClose","severity","Snackbar","autoHideDuration","createTheme","secondary","flexDirection","container","nav","Wizard","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"4OAAMA,EAAkB,CACtB,CACEC,GAAI,IACJC,GAAI,cACJC,KAAM,SACNC,GAAI,gCACJC,KAAM,kBACNC,UAAW,sBAEb,CACEL,GAAI,IACJC,GAAI,eACJC,KAAM,SACNC,GAAI,4BACJC,KAAM,UACNC,UAAW,sBAEb,CACEL,GAAI,IACJC,GAAI,cACJC,KAAM,SACNC,GAAI,8BACJC,KAAM,kBACNC,UAAW,sBAEb,CACEL,GAAI,IACJC,GAAI,eACJC,KAAM,SACNC,GAAI,6BACJC,KAAM,kBACNC,UAAW,sBAEb,CACEL,GAAI,IACJC,GAAI,cACJC,KAAM,SACNC,GAAI,8BACJC,KAAM,kBACNC,UAAW,sBAEb,CACEL,GAAI,IACJC,GAAI,iBACJC,KAAM,SACNC,GAAI,6BACJC,KAAM,kBACNC,UAAW,sBAEb,CACEL,GAAI,IACJC,GAAI,cACJC,KAAM,SACNC,GAAI,+BACJC,KAAM,UACNC,UAAW,sBAEb,CACEL,GAAI,IACJC,GAAI,cACJC,KAAM,SACNC,GAAI,MACJC,KAAM,UACNC,UAAW,sBAEb,CACEL,GAAI,IACJC,GAAI,cACJC,KAAM,SACNC,GAAI,gCACJC,KAAM,UACNC,UAAW,sBAEb,CACEL,GAAI,IACJC,GAAI,cACJC,KAAM,SACNC,GAAI,MACJC,KAAM,UACNC,UAAW,uBC3EFC,EAAuBC,YAAY,CAC9CH,KAAM,kBACNI,aAAc,CACZC,KAAM,IAERC,SAAU,CACRC,oBAAqB,SAACC,GACpBA,EAAMH,KAAOV,GAGfc,qBAAsB,SAACD,GACrBA,EAAMH,KAAO,OAMZ,EAAsDH,EAAqBQ,QAAnEH,EAAR,EAAQA,oBACAL,GADR,EAA6BO,qBACrBP,EAAf,SCpBaS,EAAcR,YAAY,CACrCH,KAAM,SACNI,aAAc,CACZQ,wBAAyB,GACzBC,uBAAmBC,EACnBC,WAAY,EACZC,MAAO,CACLC,MAAM,EACNC,aAASJ,GAEXK,cAAc,GAEhBb,SAAU,CACRc,2BAA4B,SAACZ,EAAOa,GAClCb,EAAMI,wBAA0BS,EAAOC,SAEzCC,qBAAsB,SAACf,EAAOa,GAC5Bb,EAAMK,kBAAoBQ,EAAOC,SAEnCE,OAAQ,SAAChB,GACPA,EAAMI,wBAA0B,GAChCJ,EAAMK,uBAAoBC,EAC1BN,EAAMO,WAAa,EACnBP,EAAMW,cAAe,GAEvBM,SAAU,SAACjB,EAAOa,KAGlBK,mBAAoB,SAAClB,GACnBA,EAAMW,cAAe,GAEvBQ,QAAS,SAACnB,GACRA,EAAMO,WAAaP,EAAMO,WAAa,GAExCa,KAAM,SAACpB,GACLA,EAAMO,WAAaP,EAAMO,WAAa,EACtCP,EAAMW,cAAe,GAEvBU,aAAc,SAACrB,EAAOa,GACpBb,EAAMQ,MAAMC,KAAOI,EAAOC,SAE5BQ,SAAU,SAACtB,EAAOa,GAChBb,EAAMQ,MAAQK,EAAOC,YAMpB,EAA0IX,EAAYD,QAA9IU,EAAR,EAAQA,2BAA4BG,EAApC,EAAoCA,qBAAsBC,EAA1D,EAA0DA,OAAQG,EAAlE,EAAkEA,QAASC,EAA3E,EAA2EA,KAAMH,EAAjF,EAAiFA,SAAUC,EAA3F,EAA2FA,mBAAoBG,EAA/G,EAA+GA,aAAcC,EAA7H,EAA6HA,SACrHnB,IAAf,Q,0CCjDA,SAASoB,EAAoBT,GAO3B,OALgBU,IAAMC,QAAQ,CAC5BC,OAAQ,OACRC,IAAK,0HACL9B,KAAMiB,I,eCFCc,G,WAIAC,G,WAsBeC,GA1B1B,SAAWF,IAAX,iEACE,OADF,SACQG,YAAUd,EAAS3B,KAAMuC,GADjC,uCAIA,SAAWA,IAAX,yEACkC,OADlC,SACwCG,aAAO,SAAAhC,GAE3C,OADwBA,EAAMb,gBAAgBU,KACvBoC,QAAO,SAAAC,GAAE,OAAIlC,EAAMmC,OAAO/B,wBAAwBgC,SAASF,EAAG9C,UAHzF,OAK4B,OAJpBgB,EADR,gBAKkC4B,aAAO,SAAAhC,GAAK,OAAIA,EAAMmC,OAAO9B,qBAL/D,OAOI,OAFIA,EALR,yBAOUgC,YAAKd,EACT,CACEnB,wBAAyBA,EACzBC,kBAAmBA,EACnBiC,KAAMC,KAAKC,QAXnB,OAcI,OAdJ,UAcUC,YAAInB,EAAS,CAAEb,MAAM,EAAMC,SAAS,KAd9C,QAeI,OAfJ,UAeU+B,YAAIvB,KAfd,gCAkBI,OAlBJ,0BAiBIwB,QAAQC,MAAR,MAjBJ,UAkBUF,YAAInB,EAAS,CAAEb,MAAM,EAAMC,SAAS,KAlB9C,sDAsBe,SAAWoB,IAAX,iEACb,OADa,SACPc,YAAI,CACRhB,MAFW,uCCxBf,IAAMiB,EAAiBC,cAEjBC,EAAQC,YAAe,CAC3BC,QAAS,CACP9D,gBAAiB+D,EACjBf,OAAQgB,GAEVC,WAAY,SAACC,GAAD,OAA0BA,IAAuBC,OAAOT,MAEtEA,EAAeU,IAAIzB,GAEJiB,Q,oDCXTS,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,UAAW,OACXC,gBAAiB,OACjBC,aAAa,aAAD,OAAeJ,EAAMK,QAAQC,KAAK,OAEhDC,MAAO,CACLC,SAAU,EACVC,MAAM,GAAD,OAAKT,EAAMK,QAAQK,QAAQC,WAkBrBC,MAdf,WACE,IAAMC,EAAUf,IAEhB,OACE,cAACgB,EAAA,EAAD,CAAQC,SAAS,SAASC,UAAWH,EAAQZ,KAA7C,SACE,cAACgB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKH,UAAWH,EAAQN,MAAOM,QAAS,CAAEO,aAAcP,EAAQN,OAApF,sD,oCCjBFT,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJoB,YAAY,aAAD,OAAerB,EAAMK,QAAQC,KAAK,MAC7CgB,OAAQ,QAEVC,WAAY,CACVC,YAAaxB,EAAMyB,QAAQ,QAuChBC,OAlBf,YAAmC,IAAf7E,EAAc,EAAdA,WACZgE,EAAUf,IACV6B,EAlBC,CACL,CACEC,MAAO,kBACPC,YAAa,kDAEf,CACED,MAAO,iBACPC,YAAa,iDAEf,CACED,MAAO,UACPC,YAAa,qCASjB,OACE,qBAAKb,UAAWH,EAAQZ,KAAxB,SACE,cAAC6B,EAAA,EAAD,CAASjF,WAAYA,EAAYkF,YAAY,WAA7C,SACGJ,EAAMK,KAAI,SAACC,GAAD,OACT,eAACC,EAAA,EAAD,CAAuBC,UAAQ,EAA/B,UACE,cAACC,EAAA,EAAD,CAAWpB,UAAWH,EAAQwB,UAA9B,SAAyC,cAACnB,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0Bc,EAAKL,UACxE,cAACU,EAAA,EAAD,UAAcL,EAAKJ,gBAFVI,EAAKL,e,+EC9BpBW,GAAY,CAChB,CACE7G,GAAI,KACJkG,MAAO,MAET,CACElG,GAAI,OACJkG,MAAO,QAET,CACElG,GAAI,KACJkG,MAAO,OAIX,SAASY,GAAmBC,GAC1B,IAAQC,EAA4CD,EAA5CC,iBAAkBC,EAA0BF,EAA1BE,YAAaC,EAAaH,EAAbG,SAEvC,OACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,QAAQ,WAAnB,SACE,cAACC,GAAA,EAAD,CACEC,cAAeP,EAAc,GAAKA,EAAcC,EAChDO,QAASP,EAAW,GAAKD,IAAgBC,EACzCQ,SAAUV,EACVW,WAAY,CAAE,aAAc,mCAG/Bd,GAAUP,KAAI,SAACsB,GAAD,OACb,cAACP,GAAA,EAAD,CAEEQ,MAAOD,EAASE,QAAU,QAAU,OACpCR,QAASM,EAASG,eAAiB,OAAS,SAH9C,SAKGH,EAAS1B,OAJL0B,EAAS5H,YAY1B,IAAMoE,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJyD,KAAM,GAERC,eAAgB,GAEhBC,MAAO,CACLC,MAAO,OACPC,aAAc9D,EAAMyB,QAAQ,IAE9BsC,MAAO,CACLC,SAAU,KAEZC,IAAK,CACHC,OAAQ,eAIG,SAASC,GAAT,GAAuE,IAA7C1I,EAA4C,EAA5CA,gBAAiBiB,EAA2B,EAA3BA,wBAClDmE,EAAUf,KACVsE,EAAWC,cAgBXC,EAAoC,SAACC,GACzC,IAAMC,EAAgB9H,EAAwB+H,QAAQF,GAClDG,EAAW,aAAOhI,GAQtB,OAPuB,IAAnB8H,EAEFE,EAAYC,KAAKJ,GAGjBG,EAAcA,EAAYnG,QAAO,SAACC,GAAD,OAAQA,IAAO+F,KAE3CG,GAKT,OACE,qBAAK1D,UAAWH,EAAQZ,KAAxB,SACE,cAAC2E,GAAA,EAAD,CAAgB5D,UAAWH,EAAQ8C,eAAnC,SACE,eAACkB,GAAA,EAAD,CACE7D,UAAWH,EAAQkD,MACnB,kBAAgB,aAChBe,KAAK,SACL,aAAW,iBACXC,cAAY,EALd,UAOE,cAACvC,GAAD,CACE3B,QAASA,EACT8B,YAAajG,EAAwBsI,OACrCtC,iBA1CmB,SAACuC,GAC5B,GAAIA,EAAMC,OAAO/B,QAAjB,CACE,IAAMgC,EAAe1J,EAAgBuG,KAAI,SAACoD,GAAD,OAAOA,EAAE1J,MAClD0I,EAASlH,EAA2BiI,SAGtCf,EAASlH,EAA2B,MAqC5B0F,SAAUnH,EAAgBuJ,SAE5B,cAACK,GAAA,EAAD,UACG5J,EACEuG,KAAI,SAACiC,EAAKqB,GACT,IArBMxJ,EAqBAyJ,GArBAzJ,EAqB4BmI,EAAIvI,IArBoB,IAA3CgB,EAAwB+H,QAAQ3I,IAsBzC0J,EAAO,kCAA8BF,GAE3C,OACE,eAACxC,GAAA,EAAD,CACE9B,UAAWH,EAAQoD,IACnBwB,OAAK,EACLC,QAAS,SAACT,GAAD,OA9CP,SAACA,EAAOV,GAC1B,IAAMG,EAAcJ,EAAkCC,GACtDH,EAASlH,EAA2BwH,IA4CAiB,CAAYV,EAAOhB,EAAIvI,KAC3CkK,KAAK,WACL,eAAcL,EACdM,UAAW,EAEXC,SAAUP,EARZ,UAUE,cAACxC,GAAA,EAAD,CAAWC,QAAQ,WAAnB,SACE,cAACC,GAAA,EAAD,CACEE,QAASoC,EACTlC,WAAY,CAAE,kBAAmBmC,GACjCxE,UAAU,eAGd,cAAC+B,GAAA,EAAD,CAAWgD,UAAU,KAAKrK,GAAI8J,EAASQ,MAAM,MAAMhD,QAAQ,OAA3D,SACGiB,EAAItI,KAEP,cAACoH,GAAA,EAAD,CAAWQ,MAAM,OAAjB,SAAyBU,EAAIrI,OAC7B,cAACmH,GAAA,EAAD,CAAWQ,MAAM,OAAjB,SAAyBU,EAAIpI,OAdxBoI,EAAIvI,gB,oDCnIvBoE,GAAYC,aAAW,SAACC,GAAD,YAAY,CACvCC,KAAM,CACJO,SAAU,GAEZyF,QAAM,GACJlF,SAAU,WACVmF,aAAclG,EAAMmG,MAAMD,aAC1B/F,gBAAiBiG,aAAMpG,EAAMK,QAAQgG,OAAOC,MAAO,KACnD,UAAW,CACTnG,gBAAiBiG,aAAMpG,EAAMK,QAAQgG,OAAOC,MAAO,MAErDC,WAAY,EACZ1C,MAAO,QARH,eASH7D,EAAMwG,YAAYC,GAAG,MAAQ,CAC5B5C,MAAO,SAVL,kDAYuB7D,EAAMK,QAAQC,KAAK,OAZ1C,GAcNoG,WAAY,CACV1D,QAAShD,EAAMyB,QAAQ,EAAG,GAC1BH,OAAQ,OACRP,SAAU,WACV4F,cAAe,OACfC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,UAAW,CACTtG,MAAO,UACPoD,MAAO,QAETmD,WAAY,CACVhE,QAAShD,EAAMyB,QAAQ,EAAG,EAAG,EAAG,GAChCwF,YAAY,cAAD,OAAgBjH,EAAMyB,QAAQ,GAA9B,YAwBAyF,OApBf,WACE,IAAMrG,EAAUf,KAEhB,OACE,sBAAKkB,UAAWH,EAAQoF,OAAxB,UACE,qBAAKjF,UAAWH,EAAQ6F,WAAxB,SACE,cAAC,KAAD,MAEF,cAACS,GAAA,EAAD,CACEC,YAAY,eACZvG,QAAS,CACPZ,KAAMY,EAAQkG,UACdM,MAAOxG,EAAQmG,YAEjB3D,WAAY,CAAE,aAAc,gB,UCjD9BvD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ+C,QAAShD,EAAMyB,QAAQ,GACvBmF,QAAS,OACTE,eAAgB,YAElBvF,WAAY,CACVC,YAAaxB,EAAMyB,QAAQ,QAgChB6F,OA5Bf,YAAyD,IAAtBC,EAAqB,EAArBA,kBAC3B1G,EAAUf,KACVsE,EAAWC,cAMjB,OACE,sBAAKrD,UAAWH,EAAQZ,KAAxB,UACE,cAACuH,GAAA,EAAD,CACEC,UAAQ,EACRzG,UAAWH,EAAQU,WAFrB,oBAMA,cAACiG,GAAA,EAAD,CACErG,QAAQ,YACRV,MAAM,UACNiF,QAfsB,WAC1BtB,EAAS3G,MAeLgK,UAAWF,EAJb,0BCbSG,OAdf,WACE,IAAMjM,EAAkBkM,aAAY,SAACrL,GAAD,OAAWA,EAAMb,gBAAgBU,QAC/DO,EAA0BiL,aAAY,SAACrL,GAAD,OAAWA,EAAMmC,OAAO/B,2BAEpE,OACE,qCACE,cAAC,GAAD,IACA,cAAC,GAAD,CAAqBjB,gBAAiBA,EAAiBiB,wBAAyBA,IAChF,cAAC,GAAD,CAAwB6K,kBAAmB7K,EAAwBsI,OAAS,QCR5ElF,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ+C,QAAShD,EAAMyB,QAAQ,GACvBmF,QAAS,OACTE,eAAgB,YAElBc,aAAc,CACZpG,YAAaxB,EAAMyB,QAAQ,IAE7BF,WAAY,CACVC,YAAaxB,EAAMyB,QAAQ,QA8ChBoG,OA1Cf,YAA0D,IAAxBC,EAAuB,EAAvBA,oBAC1BjH,EAAUf,KACVsE,EAAWC,cAcjB,OACE,sBAAKrD,UAAWH,EAAQZ,KAAxB,UACE,cAACuH,GAAA,EAAD,CACExG,UAAWH,EAAQ+G,aACnBlC,QAZoB,WACxBtB,EAAS9G,MASP,oBAMA,cAACkK,GAAA,EAAD,CACExG,UAAWH,EAAQU,WACnBmE,QAdkB,WACtBtB,EAAS1G,MAWP,kBAMA,cAAC8J,GAAA,EAAD,CACErG,QAAQ,YACRV,MAAM,UACNiF,QA7BsB,WAC1BtB,EAAS3G,MA6BLgK,UAAWK,EAJb,0B,UCpDAC,GAAiB,CACrBC,gBAAiB,CACfpG,MAAO,kBACPC,YAAa,0CAEfoG,mBAAoB,CAClBrG,MAAO,qBACPC,YAAa,qCCGX/B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJyD,KAAM,GAERwE,cAAe,CACbC,OAAQnI,EAAMyB,QAAQ,GACtBuB,QAAShD,EAAMyB,QAAQ,GACvBmF,QAAS,OACTE,eAAgB,gBAChB3G,gBAAiB,SAAAsC,GACf,OAAIA,EAAMgF,SACDzH,EAAMK,QAAQC,KAAK,KAExBmC,EAAMU,QACDiF,aAAQpI,EAAMK,QAAQK,QAAQ2H,KAAM,IAEtC,IAET5H,MAAO,SAAAgC,GAAK,OAAIA,EAAMgF,SAAWzH,EAAMK,QAAQC,KAAK,KAAO,IAC3D4D,OAAQ,SAAAzB,GAAK,OAAKA,EAAMgF,SAAuB,OAAZ,YAErC7D,MAAO,CACLC,MAAO,OACPC,aAAc9D,EAAMyB,QAAQ,IAE9BsC,MAAO,CACLC,SAAU,SAId,SAASsE,GAAT,GAAqF,IAAnDJ,EAAkD,EAAlDA,cAAe/E,EAAmC,EAAnCA,QAASsE,EAA0B,EAA1BA,SAAUc,EAAgB,EAAhBA,aAC5D1H,EAAUf,GAAU,CAAEqD,UAASsE,aACrC,OACE,eAACe,GAAA,EAAD,CACExH,UAAWH,EAAQqH,cACnBxC,QAAU+B,OAAyD7K,EAA9C,kBAAM2L,GAAcpF,EAAS+E,IAFpD,UAIE,gCACE,cAAChH,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACG4G,GAAeG,GAAetG,QAEjC,cAACV,EAAA,EAAD,UACG6G,GAAeG,GAAerG,iBAGnC,8BACE,cAACoB,GAAA,EAAD,CACEwE,SAAUA,EACVtE,QAASA,EACTrH,KAAI,UAAKoM,GACTzH,MAAM,iBA0BDgI,OAnBf,YAAsD,IAAtB9L,EAAqB,EAArBA,kBACxBkE,EAAUf,KACVsE,EAAWC,cAEXkE,EAAe,SAACpF,EAAS+E,GAE3B9D,EAAS/G,EADP8F,EAC4B+E,OAEAtL,KAGlC,OACE,sBAAKoE,UAAWH,EAAQZ,KAAxB,UACE,cAACqI,GAAD,CAAuBJ,cAAc,kBAAkB/E,QAA+B,oBAAtBxG,EAAyC4L,aAAcA,IACvH,cAACD,GAAD,CAAuBJ,cAAc,qBAAqB/E,QAA+B,uBAAtBxG,EAA4C4L,aAAcA,EAAcd,UAAQ,QCjE1IiB,OAVf,WACE,IAAM/L,EAAoBgL,aAAY,SAACrL,GAAD,OAAWA,EAAMmC,OAAO9B,qBAC9D,OACE,qCACE,cAAC,GAAD,CAAqBA,kBAAmBA,IACxC,cAAC,GAAD,CAAuBmL,oBAAqBnL,QCH5CmD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ+C,QAAShD,EAAMyB,QAAQ,GACvBmF,QAAS,OACTE,eAAgB,YAElBc,aAAc,CACZpG,YAAaxB,EAAMyB,QAAQ,IAE7BF,WAAY,CACVC,YAAaxB,EAAMyB,QAAQ,QA+ChBkH,OA3Cf,WACE,IAAM9H,EAAUf,KACVsE,EAAWC,cACXpH,EAAe0K,aAAY,SAAArL,GAAK,OAAIA,EAAMmC,OAAOxB,gBAcvD,OACE,sBAAK+D,UAAWH,EAAQZ,KAAxB,UACE,cAACuH,GAAA,EAAD,CACExG,UAAWH,EAAQ+G,aACnBlC,QAZoB,WACxBtB,EAAS9G,MASP,oBAMA,cAACkK,GAAA,EAAD,CACExG,UAAWH,EAAQ+G,aACnBlC,QAdkB,WACtBtB,EAAS1G,MAWP,kBAMA,cAAC8J,GAAA,EAAD,CACErG,QAAQ,YACRV,MAAM,UACNiF,QA7BsB,WAC1BtB,EAAS7G,MA6BLkK,SAAUxK,EAJZ,0BCvCA6C,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC4I,QAAS,CACP5F,QAAShD,EAAMyB,QAAQ,GACvBiC,KAAM,GAERC,eAAgB,CACdkF,UAAW7I,EAAMyB,QAAQ,GACzBqC,aAAc9D,EAAMyB,QAAQ,IAE9BqH,cAAe,CACbhF,aAAc9D,EAAMyB,QAAQ,GAC5BrB,aAAa,aAAD,OAAeJ,EAAMK,QAAQC,KAAK,WAgDnCyI,OA5Cf,YAA2E,IAAnDC,EAAkD,EAAlDA,4BAA6BrM,EAAqB,EAArBA,kBAC7CkE,EAAUf,KAEhB,OACE,sBAAKkB,UAAWH,EAAQ+H,QAAxB,UACE,cAAC1H,EAAA,EAAD,CAAYC,QAAQ,KAAKH,UAAWH,EAAQiI,cAA5C,8BAIA,cAAClE,GAAA,EAAD,CAAgBmB,UAAWyC,KAAOxH,UAAWH,EAAQ8C,eAArD,SACE,eAACkB,GAAA,EAAD,CAAO,aAAW,eAAlB,UACE,cAAChC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,yBACA,cAACA,GAAA,EAAD,sBACA,cAACA,GAAA,EAAD,yBACA,cAACA,GAAA,EAAD,8BAGJ,cAACsC,GAAA,EAAD,UACG2D,EAA4BhH,KAAI,SAACiC,GAAD,OAC/B,eAACnB,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWgD,UAAU,KAAKC,MAAM,MAAhC,SACG/B,EAAItI,KAEP,cAACoH,GAAA,EAAD,CAAWQ,MAAM,OAAjB,SAAyBU,EAAInI,OAC7B,cAACiH,GAAA,EAAD,CAAWQ,MAAM,OAAjB,SAAyBU,EAAIrI,OAC7B,cAACmH,GAAA,EAAD,CAAWQ,MAAM,OAAjB,SAAyBU,EAAIlI,cANhBkI,EAAIvI,cAa3B,cAACwF,EAAA,EAAD,CAAYC,QAAQ,KAAKH,UAAWH,EAAQiI,cAA5C,4BAGA,cAAC5H,EAAA,EAAD,UACG6G,GAAepL,GAAmBiF,YChC5BqH,OA5Bf,WAEE,IAAMvM,EAA0BiL,aAAY,SAACrL,GAAD,OAAWA,EAAMmC,OAAO/B,2BAC9DC,EAAoBgL,aAAY,SAACrL,GAAD,OAAWA,EAAMmC,OAAO9B,qBAexDuM,EAd8BvB,aAAY,SAACrL,GAAD,OAAWA,EAAMb,gBAAgBU,QAcToC,QAAO,SAACC,GAAD,OAAQ9B,EAAwBgC,SAASF,EAAG9C,OAE3H,OACE,qCACE,cAAC,GAAD,CAAaiB,kBAAmBA,EAAmBqM,4BAA6BE,IAChF,cAAC,GAAD,Q,6BCtBN,SAASC,GAAO1G,GACd,OAAO,cAAC,KAAD,cAAU2G,UAAW,EAAGjI,QAAQ,UAAasB,IAuCvC4G,OApCf,WACE,IAaIvM,EAbEsH,EAAWC,cAEXiF,EAAoB3B,aAAY,SAACrL,GAAD,OAAWA,EAAMmC,OAAO3B,MAAMC,QAG9DwM,EAAc,SAACtE,EAAOuE,GACX,cAAXA,GAIJpF,EAASzG,GAAa,KAkBxB,OAbEb,EAZc6K,aAAY,SAACrL,GAAD,OAAWA,EAAMmC,OAAO3B,MAAME,WAatD,cAAC,GAAD,CAAOyM,QAASF,EAAaG,SAAS,UAAtC,mDAMA,cAAC,GAAD,CAAOD,QAASF,EAAaG,SAAS,QAAtC,mCAOF,cAACC,GAAA,EAAD,CAAU5M,KAAMuM,EAAmBM,iBAAkB,IAAMH,QAASF,EAApE,SACGzM,K,SC9BQkD,GAXD6J,aAAY,CACxBxJ,QAAS,CACPK,QAAS,CACP2H,KAAM,WAERyB,UAAW,CACTzB,KAAM,cCMNvI,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ2G,QAAS,OACTmD,cAAe,SACfzI,OAAQ,SAEV0I,UAAW,CACTpD,QAAS,OACTlD,KAAM,GAERuG,IAAK,CACHvG,KAAM,GAER2E,KAAM,CACJ3E,KAAM,EACNkD,QAAS,OACTmD,cAAe,cAuCJG,OAnCf,WACE,IAAMrJ,EAAUf,KACVsE,EAAWC,cACXxH,EAAa8K,aAAY,SAACrL,GAAD,OAAWA,EAAMmC,OAAO5B,cAMvD,OAJAsN,qBAAU,WACR/F,EAAS/H,QAIT,cAAC,IAAD,CAAkB2D,MAAOA,GAAzB,SACE,sBAAKgB,UAAWH,EAAQZ,KAAxB,UACE,iCACE,cAAC,EAAD,MAEF,0BAASe,UAAWH,EAAQmJ,UAA5B,UACE,qBAAKhJ,UAAWH,EAAQoJ,IAAxB,SACE,cAAC,GAAD,CAASpN,WAAYA,MAEvB,sBAAMmE,UAAWH,EAAQwH,KAAzB,SACmB,IAAfxL,GACA,cAAC,GAAD,KACmB,IAAfA,GACJ,cAAC,GAAD,KACmB,IAAfA,GACJ,cAAC,GAAD,SAIN,cAAC,GAAD,UCnDOuN,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAD,CAAUzL,MAAOA,EAAjB,SACE,cAAC,GAAD,MAEF0L,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.9aa3d9f2.chunk.js","sourcesContent":["const networkElements = [\n  {\n    id: '0',\n    ip: '10.10.10.10',\n    type: 'eNodeB',\n    dn: 'PLMN-PLMN/MRBTS-4321/LNBTS-01',\n    name: 'MRBT_test_SM_AG',\n    swVersion: 'SW_00323_92034_395'\n  },\n  {\n    id: '1',\n    ip: '10.128.32.14',\n    type: 'eNodeB',\n    dn: 'PLMN-PLMN/MRBTS-1/LNBTS-4',\n    name: '5G_500%',\n    swVersion: 'SW_03482_19342_102'\n  },\n  {\n    id: '2',\n    ip: '10.11.12.13',\n    type: 'eNodeB',\n    dn: 'PLMN-PLMN/MRBTS-21/LNBTS-21',\n    name: 'MRBT_test_SM_AG',\n    swVersion: 'SW_00323_92034_395'\n  },\n  {\n    id: '3',\n    ip: '10.154.23.41',\n    type: 'eNodeB',\n    dn: 'PLMN-PLMN/MRBTS-31/LNBTS-1',\n    name: 'MRBT_test_SM_AG',\n    swVersion: 'SW_00323_92034_395'\n  },\n  {\n    id: '4',\n    ip: '10.65.56.49',\n    type: 'eNodeB',\n    dn: 'PLMN-PLMN/MRBTS-71/LNBTS-40',\n    name: 'MRBT_test_SM_AG',\n    swVersion: 'SW_00323_92034_395'\n  },\n  {\n    id: '5',\n    ip: '10.115.111.111',\n    type: 'eNodeB',\n    dn: 'PLMN-PLMN/MRBTS-74/LNBTS-6',\n    name: 'MRBT_test_SM_AG',\n    swVersion: 'SW_00323_92034_395'\n  },\n  {\n    id: '6',\n    ip: '10.14.41.15',\n    type: 'eNodeB',\n    dn: 'PLMN-PLMN/MRBTS-241/LNBTS-41',\n    name: '5G_500%',\n    swVersion: 'SW_03482_19342_102'\n  },\n  {\n    id: '7',\n    ip: '10.98.45.65',\n    type: 'eNodeB',\n    dn: 'N/A',\n    name: '5G_500%',\n    swVersion: 'SW_03482_19342_102'\n  },\n  {\n    id: '8',\n    ip: '10.10.54.56',\n    type: 'eNodeB',\n    dn: 'PLMN-PLMN/MRBTS-661/LNBTS-303',\n    name: '5G_500%',\n    swVersion: 'SW_03482_19342_102'\n  },\n  {\n    id: '9',\n    ip: '10.75.65.24',\n    type: 'eNodeB',\n    dn: 'N/A',\n    name: '5G_500%',\n    swVersion: 'SW_03482_19342_102'\n  }\n  // {\n  //   id: '10',\n  //   ip: '10.198.165.23',\n  //   type: 'eNodeB',\n  //   dn: 'PLMN-PLMN/MRBTS-27/LNBTS-36',\n  //   name: '5G_500%',\n  //   swVersion: 'SW_03482_19342_102'\n  // },\n  // {\n  //   id: '11',\n  //   ip: '10.45.65.23',\n  //   type: 'eNodeB',\n  //   dn: 'PLMN-PLMN/MRBTS-9/LNBTS-11',\n  //   name: '5G_500%',\n  //   swVersion: 'SW_03482_19342_102'\n  // },\n  // {\n  //   id: '12',\n  //   ip: '10.23.41.11',\n  //   type: 'eNodeB',\n  //   dn: 'PLMN-PLMN/MRBTS-58/LNBTS-67',\n  //   name: '5G_500%',\n  //   swVersion: 'SW_03482_19342_102'\n  // },\n  // {\n  //   id: '13',\n  //   ip: '10.46.74.23',\n  //   type: 'eNodeB',\n  //   dn: 'PLMN-PLMN/MRBTS-9/LNBTS-8795',\n  //   name: '5G_500%',\n  //   swVersion: 'SW_03482_19342_102'\n  // },\n  // {\n  //   id: '14',\n  //   ip: '10.98.109.100',\n  //   type: 'eNodeB',\n  //   dn: 'PLMN-PLMN/MRBTS-101/LNBTS-100',\n  //   name: '5G_500%',\n  //   swVersion: 'SW_03482_19342_102'\n  // }\n]\n\nexport { networkElements }\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport { networkElements } from '../api/networkElements'\n\nexport const networkElementsSlice = createSlice({\n  name: 'networkElements',\n  initialState: {\n    data: []\n  },\n  reducers: {\n    loadNetworkElements: (state) => {\n      state.data = networkElements\n      // when necessary this should be handled by redux-saga and fetching from API\n    },\n    clearNetworkElements: (state) => {\n      state.data = []\n    }\n  }\n})\n\n// Action creators are generated for each case reducer function\nexport const { loadNetworkElements, clearNetworkElements } = networkElementsSlice.actions\nexport default networkElementsSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const wizardSlice = createSlice({\n  name: 'wizard',\n  initialState: {\n    selectedNetworkElements: [],\n    selectedOperation: undefined,\n    activeStep: 0,\n    toast: {\n      open: false,\n      success: undefined\n    },\n    scheduleSent: false\n  },\n  reducers: {\n    setSelectedNetworkElements: (state, action) => {\n      state.selectedNetworkElements = action.payload\n    },\n    setSelectedOperation: (state, action) => {\n      state.selectedOperation = action.payload\n    },\n    cancel: (state) => {\n      state.selectedNetworkElements = []\n      state.selectedOperation = undefined\n      state.activeStep = 0\n      state.scheduleSent = false\n    },\n    schedule: (state, action) => {\n      // watched by watchSchedule saga\n    },\n    setScheduleSuccess: (state) => {\n      state.scheduleSent = true\n    },\n    forward: (state) => {\n      state.activeStep = state.activeStep + 1\n    },\n    back: (state) => {\n      state.activeStep = state.activeStep - 1\n      state.scheduleSent = false\n    },\n    setToastOpen: (state, action) => {\n      state.toast.open = action.payload\n    },\n    setToast: (state, action) => {\n      state.toast = action.payload\n    }\n  }\n})\n\n// Action creators are generated for each case reducer function\nexport const { setSelectedNetworkElements, setSelectedOperation, cancel, forward, back, schedule, setScheduleSuccess, setToastOpen, setToast } = wizardSlice.actions\nexport default wizardSlice.reducer\n","import axios from 'axios'\n\nfunction requestPutSchedule (payload) {\n  // URL could be moved to an env variable\n  const request = axios.request({\n    method: 'post',\n    url: 'https://frontend-interview-f788d-default-rtdb.europe-west1.firebasedatabase.app/scheduledNetworkElementsOperations.json',\n    data: payload\n  })\n  return request\n}\n\nexport { requestPutSchedule }\n","import { put, takeEvery, all, call, select } from 'redux-saga/effects'\n\nimport { schedule, setScheduleSuccess, setToast } from '../store/wizardSlice'\nimport { requestPutSchedule } from '../api/scheduleLogger'\n\nfunction * watchSchedule () {\n  yield takeEvery(schedule.type, handleSchedule)\n}\n\nfunction * handleSchedule () {\n  const selectedNetworkElements = yield select(state => {\n    const networkElements = state.networkElements.data\n    return networkElements.filter(el => state.wizard.selectedNetworkElements.includes(el.id))\n  })\n  const selectedOperation = yield select(state => state.wizard.selectedOperation)\n  try {\n    yield call(requestPutSchedule,\n      {\n        selectedNetworkElements: selectedNetworkElements,\n        selectedOperation: selectedOperation,\n        date: Date.now()\n      }\n    )\n    yield put(setToast({ open: true, success: true }))\n    yield put(setScheduleSuccess())\n  } catch (e) {\n    console.error(e)\n    yield put(setToast({ open: true, success: false }))\n  }\n}\n\nexport default function * rootSaga () {\n  yield all([\n    watchSchedule()\n  ])\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport createSagaMiddleware from 'redux-saga'\n\nimport networkElementsReducer from './networkElementsSlice'\nimport wizardReducer from './wizardSlice'\nimport rootSaga from '../sagas/sagas.js'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = configureStore({\n  reducer: {\n    networkElements: networkElementsReducer,\n    wizard: wizardReducer\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(sagaMiddleware)\n})\nsagaMiddleware.run(rootSaga)\n\nexport default store\n","import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    boxShadow: 'none',\n    backgroundColor: '#fff',\n    borderBottom: `1px solid ${theme.palette.grey[300]}`\n  },\n  title: {\n    flexGrow: 1,\n    color: `${theme.palette.primary.dark}`\n  }\n}))\n\nfunction Header () {\n  const classes = useStyles()\n\n  return (\n    <AppBar position='static' className={classes.root}>\n      <Toolbar>\n        <Typography variant='h6' className={classes.title} classes={{ colorPrimary: classes.title }}>\n          Network Element Operation Scheduler\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Stepper from '@material-ui/core/Stepper'\nimport Step from '@material-ui/core/Step'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport { StepContent, Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    borderRight: `1px solid ${theme.palette.grey[300]}`,\n    height: '100%'\n  },\n  backButton: {\n    marginRight: theme.spacing(1)\n  }\n}))\n\nfunction getSteps () {\n  return [\n    {\n      label: 'Network Element',\n      description: 'At least one Network Element shall be selected'\n    },\n    {\n      label: 'Operation Type',\n      description: 'At least one Operation Type shall be selected'\n    },\n    {\n      label: 'Summary',\n      description: 'Statement of scheduled operation'\n    }\n  ]\n}\n\nfunction Sidebar ({ activeStep }) {\n  const classes = useStyles()\n  const steps = getSteps()\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} orientation='vertical'>\n        {steps.map((step) => (\n          <Step key={step.label} expanded>\n            <StepLabel className={classes.stepLabel}><Typography variant='h6'>{step.label}</Typography></StepLabel>\n            <StepContent>{step.description}</StepContent>\n          </Step>\n        ))}\n      </Stepper>\n    </div>\n  )\n}\n\nexport default Sidebar\n","import React from 'react'\n\nimport { useDispatch } from 'react-redux'\nimport { setSelectedNetworkElements } from '../store/wizardSlice'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\n\nconst headCells = [\n  {\n    id: 'ip',\n    label: 'IP'\n  },\n  {\n    id: 'type',\n    label: 'Type'\n  },\n  {\n    id: 'dn',\n    label: 'DN'\n  }\n]\n\nfunction EnhancedTableHead (props) {\n  const { onSelectAllClick, numSelected, rowCount } = props\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding='checkbox'>\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all network elements' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n          >\n            {headCell.label}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flex: 1\n  },\n  tableContainer: {\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  row: {\n    cursor: 'pointer'\n  }\n}))\n\nexport default function EnhancedTable ({ networkElements, selectedNetworkElements }) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = networkElements.map((n) => n.id)\n      dispatch(setSelectedNetworkElements(newSelecteds))\n      return\n    }\n    dispatch(setSelectedNetworkElements([]))\n  }\n\n  const handleClick = (event, selectedNetworkElementId) => {\n    const newSelected = updateSelectedNetworkElementsList(selectedNetworkElementId)\n    dispatch(setSelectedNetworkElements(newSelected))\n  }\n\n  const updateSelectedNetworkElementsList = (selectedNetworkElementId) => {\n    const selectedIndex = selectedNetworkElements.indexOf(selectedNetworkElementId)\n    let newSelected = [...selectedNetworkElements]\n    if (selectedIndex === -1) {\n      // Add if not in list\n      newSelected.push(selectedNetworkElementId)\n    } else {\n      // Remove if element was already in list\n      newSelected = newSelected.filter((el) => el !== selectedNetworkElementId)\n    }\n    return newSelected\n  }\n\n  const isSelected = (name) => selectedNetworkElements.indexOf(name) !== -1\n\n  return (\n    <div className={classes.root}>\n      <TableContainer className={classes.tableContainer}>\n        <Table\n          className={classes.table}\n          aria-labelledby='tableTitle'\n          size='medium'\n          aria-label='enhanced table'\n          stickyHeader\n        >\n          <EnhancedTableHead\n            classes={classes}\n            numSelected={selectedNetworkElements.length}\n            onSelectAllClick={handleSelectAllClick}\n            rowCount={networkElements.length}\n          />\n          <TableBody>\n            {networkElements\n              .map((row, index) => {\n                const isItemSelected = isSelected(row.id)\n                const labelId = `enhanced-table-checkbox-${index}`\n\n                return (\n                  <TableRow\n                    className={classes.row}\n                    hover\n                    onClick={(event) => handleClick(event, row.id)}\n                    role='checkbox'\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.id}\n                    selected={isItemSelected}\n                  >\n                    <TableCell padding='checkbox'>\n                      <Checkbox\n                        checked={isItemSelected}\n                        inputProps={{ 'aria-labelledby': labelId }}\n                        className='checkbox'\n                      />\n                    </TableCell>\n                    <TableCell component='th' id={labelId} scope='row' padding='none'>\n                      {row.ip}\n                    </TableCell>\n                    <TableCell align='left'>{row.type}</TableCell>\n                    <TableCell align='left'>{row.dn}</TableCell>\n                  </TableRow>\n                )\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport InputBase from '@material-ui/core/InputBase'\nimport { alpha, makeStyles } from '@material-ui/core/styles'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 'auto'\n    },\n    borderBottom: `1px solid ${theme.palette.grey[300]}`\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`\n  }\n}))\n\nfunction NetworkElementSearch () {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        <SearchIcon />\n      </div>\n      <InputBase\n        placeholder='Search…'\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput\n        }}\n        inputProps={{ 'aria-label': 'search' }}\n      />\n    </div>\n  )\n}\n\nexport default NetworkElementSearch\n","import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport { useDispatch } from 'react-redux'\n\nimport { forward } from '../store/wizardSlice'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  backButton: {\n    marginRight: theme.spacing(1)\n  }\n}))\n\nfunction NetworkElementControls ({ isSelectedElement }) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const handleContinueClick = () => {\n    dispatch(forward())\n  }\n\n  return (\n    <div className={classes.root}>\n      <Button\n        disabled\n        className={classes.backButton}\n      >\n        Cancel\n      </Button>\n      <Button\n        variant='contained'\n        color='primary'\n        onClick={handleContinueClick}\n        disabled={!isSelectedElement}\n      >\n        Continue\n      </Button>\n    </div>\n  )\n}\n\nexport default NetworkElementControls\n","import React from 'react'\n\nimport { useSelector } from 'react-redux'\n\nimport NetworkElementsList from './NetworkElementsList'\nimport NetworkElementSearch from './NetworkElementSearch'\nimport NetworkElementControls from './NetworkElementControls'\n\nfunction NetworkElementStep () {\n  const networkElements = useSelector((state) => state.networkElements.data)\n  const selectedNetworkElements = useSelector((state) => state.wizard.selectedNetworkElements)\n\n  return (\n    <>\n      <NetworkElementSearch />\n      <NetworkElementsList networkElements={networkElements} selectedNetworkElements={selectedNetworkElements} />\n      <NetworkElementControls isSelectedElement={selectedNetworkElements.length > 0} />\n    </>\n\n  )\n}\n\nexport default NetworkElementStep\n","import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport { useDispatch } from 'react-redux'\n\nimport { forward, back, cancel } from '../store/wizardSlice'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  cancelButton: {\n    marginRight: theme.spacing(1)\n  },\n  backButton: {\n    marginRight: theme.spacing(1)\n  }\n}))\n\nfunction OperationTypeControls ({ isSelectedOperation }) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const handleContinueClick = () => {\n    dispatch(forward())\n  }\n\n  const handleCancelClick = () => {\n    dispatch(cancel())\n  }\n\n  const handleBackClick = () => {\n    dispatch(back())\n  }\n\n  return (\n    <div className={classes.root}>\n      <Button\n        className={classes.cancelButton}\n        onClick={handleCancelClick}\n      >\n        Cancel\n      </Button>\n      <Button\n        className={classes.backButton}\n        onClick={handleBackClick}\n      >\n        Back\n      </Button>\n      <Button\n        variant='contained'\n        color='primary'\n        onClick={handleContinueClick}\n        disabled={!isSelectedOperation}\n      >\n        Continue\n      </Button>\n    </div>\n  )\n}\n\nexport default OperationTypeControls\n","const operationTypes = {\n  update_software: {\n    label: 'Update Software',\n    description: 'SW upgrade on NE to the latest version'\n  },\n  downgrade_software: {\n    label: 'Downgrade Software',\n    description: 'SW downgrade to the previous one'\n  }\n}\n\nexport { operationTypes }\n","import React from 'react'\n\nimport { useDispatch } from 'react-redux'\nimport { setSelectedOperation } from '../store/wizardSlice'\nimport { makeStyles, lighten } from '@material-ui/core/styles'\nimport { Paper, Typography } from '@material-ui/core'\nimport Checkbox from '@material-ui/core/Checkbox'\n\nimport { operationTypes } from '../common/constants'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flex: 1\n  },\n  operationType: {\n    margin: theme.spacing(3),\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'space-between',\n    backgroundColor: props => {\n      if (props.disabled) {\n        return theme.palette.grey[100]\n      }\n      if (props.checked) {\n        return lighten(theme.palette.primary.main, 0.9)\n      }\n      return ''\n    },\n    color: props => props.disabled ? theme.palette.grey[400] : '',\n    cursor: props => !props.disabled ? 'pointer' : 'auto'\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  }\n}))\n\nfunction OperationTypeCheckbox ({ operationType, checked, disabled, handleChange }) {\n  const classes = useStyles({ checked, disabled })\n  return (\n    <Paper\n      className={classes.operationType}\n      onClick={!disabled ? () => handleChange(!checked, operationType) : undefined}\n    >\n      <div>\n        <Typography variant='h5'>\n          {operationTypes[operationType].label}\n        </Typography>\n        <Typography>\n          {operationTypes[operationType].description}\n        </Typography>\n      </div>\n      <div>\n        <Checkbox\n          disabled={disabled}\n          checked={checked}\n          name={`${operationType}`}\n          color='primary'\n        />\n      </div>\n    </Paper>\n  )\n}\n\nfunction OperationTypePicker ({ selectedOperation }) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const handleChange = (checked, operationType) => {\n    if (checked) {\n      dispatch(setSelectedOperation(operationType))\n    } else {\n      dispatch(setSelectedOperation(undefined))\n    }\n  }\n  return (\n    <div className={classes.root}>\n      <OperationTypeCheckbox operationType='update_software' checked={selectedOperation === 'update_software'} handleChange={handleChange} />\n      <OperationTypeCheckbox operationType='downgrade_software' checked={selectedOperation === 'downgrade_software'} handleChange={handleChange} disabled />\n    </div>\n  )\n}\n\nexport default OperationTypePicker\n","import React from 'react'\n\nimport { useSelector } from 'react-redux'\nimport OperationTypeControls from './OperationTypeControls'\nimport OperationTypePicker from './OperationTypePicker'\n\nfunction OperationTypeStep () {\n  const selectedOperation = useSelector((state) => state.wizard.selectedOperation)\n  return (\n    <>\n      <OperationTypePicker selectedOperation={selectedOperation} />\n      <OperationTypeControls isSelectedOperation={selectedOperation} />\n    </>\n  )\n}\n\nexport default OperationTypeStep\n","import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { schedule, back, cancel } from '../store/wizardSlice'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  cancelButton: {\n    marginRight: theme.spacing(1)\n  },\n  backButton: {\n    marginRight: theme.spacing(1)\n  }\n}))\n\nfunction SummaryControls () {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const scheduleSent = useSelector(state => state.wizard.scheduleSent)\n\n  const handleScheduleClick = () => {\n    dispatch(schedule())\n  }\n\n  const handleCancelClick = () => {\n    dispatch(cancel())\n  }\n\n  const handleBackClick = () => {\n    dispatch(back())\n  }\n\n  return (\n    <div className={classes.root}>\n      <Button\n        className={classes.cancelButton}\n        onClick={handleCancelClick}\n      >\n        Cancel\n      </Button>\n      <Button\n        className={classes.cancelButton}\n        onClick={handleBackClick}\n      >\n        Back\n      </Button>\n      <Button\n        variant='contained'\n        color='primary'\n        onClick={handleScheduleClick}\n        disabled={scheduleSent}\n      >\n        Schedule\n      </Button>\n    </div>\n  )\n}\n\nexport default SummaryControls\n","import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Typography } from '@material-ui/core'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\n\nimport { operationTypes } from '../common/constants'\n\nconst useStyles = makeStyles((theme) => ({\n  summary: {\n    padding: theme.spacing(2),\n    flex: 1\n  },\n  tableContainer: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  },\n  sectionHeader: {\n    marginBottom: theme.spacing(2),\n    borderBottom: `1px solid ${theme.palette.grey[400]}`\n  }\n}))\n\nfunction SummaryInfo ({ selectedNetworkElementsData, selectedOperation }) {\n  const classes = useStyles()\n  \n  return (\n    <div className={classes.summary}>\n      <Typography variant='h5' className={classes.sectionHeader}>\n        Network Elements\n      </Typography>\n\n      <TableContainer component={Paper} className={classes.tableContainer}>\n        <Table aria-label='simple table'>\n          <TableHead>\n            <TableRow>\n              <TableCell>IP Address</TableCell>\n              <TableCell>NE Name</TableCell>\n              <TableCell>Technology</TableCell>\n              <TableCell>SW Version</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {selectedNetworkElementsData.map((row) => (\n              <TableRow key={row.id}>\n                <TableCell component='th' scope='row'>\n                  {row.ip}\n                </TableCell>\n                <TableCell align='left'>{row.name}</TableCell>\n                <TableCell align='left'>{row.type}</TableCell>\n                <TableCell align='left'>{row.swVersion}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Typography variant='h5' className={classes.sectionHeader}>\n        Operation Type\n      </Typography>\n      <Typography>\n        {operationTypes[selectedOperation].label}\n      </Typography>\n    </div>\n  )\n}\n\nexport default SummaryInfo\n","import React from 'react'\n\nimport { useSelector } from 'react-redux'\n\nimport SummaryControls from './SummaryControls'\nimport SummaryInfo from './SummaryInfo'\n\nfunction SummaryStep () {\n  // It's good idea to use many useSelector multiple times \n  const selectedNetworkElements = useSelector((state) => state.wizard.selectedNetworkElements)\n  const selectedOperation = useSelector((state) => state.wizard.selectedOperation)\n  const selectedNetworkElementsData = useSelector((state) => state.networkElements.data)\n  // Filtering should not be done inside useSelector as it returns a new array and it is different everytime which\n  // triggers rerender\n  /*\n  Call useSelector Multiple Times in Function Components\n  When retrieving data using the useSelector hook, prefer calling useSelector many times \n  and retrieving smaller amounts of data, instead of having a single larger useSelector call \n  that returns multiple results in an object. Unlike mapState, useSelector is not required \n  to return an object, and having selectors read smaller values means it is less likely that\n   a given state change will cause this component to render.\n\n  However, try to find an appropriate balance of granularity. If a single component does need all fields in a slice of the state , just write one useSelector that returns that whole slice instead of separate selectors for each individual field.\n  https://redux.js.org/style-guide/style-guide#call-useselector-multiple-times-in-function-components\n  */\n  const selectedNetworkElementsDataFiltered = selectedNetworkElementsData.filter((el) => selectedNetworkElements.includes(el.id))\n\n  return (\n    <>\n      <SummaryInfo selectedOperation={selectedOperation} selectedNetworkElementsData={selectedNetworkElementsDataFiltered} />\n      <SummaryControls />\n    </>\n  )\n}\n\nexport default SummaryStep\n","import React from 'react'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport MuiAlert from '@material-ui/lab/Alert'\n\nimport { setToastOpen } from '../store/wizardSlice'\n\nfunction Alert (props) {\n  return <MuiAlert elevation={6} variant='filled' {...props} />\n}\n\nfunction ScheduleToast () {\n  const dispatch = useDispatch()\n\n  const scheduleToastOpen = useSelector((state) => state.wizard.toast.open)\n  const success = useSelector((state) => state.wizard.toast.success)\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n\n    dispatch(setToastOpen(false))\n  }\n\n  let toast\n  if (success) {\n    toast = (\n      <Alert onClose={handleClose} severity='success'>\n        Successfully scheduled the operation!\n      </Alert>\n    )\n  } else {\n    toast = (\n      <Alert onClose={handleClose} severity='error'>\n        Something went wrong!\n      </Alert>\n    )\n  }\n\n  return (\n    <Snackbar open={scheduleToastOpen} autoHideDuration={2000} onClose={handleClose}>\n      {toast}\n    </Snackbar>\n  )\n}\n\nexport default ScheduleToast\n","import { createTheme } from '@material-ui/core/styles'\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#214191'\n    },\n    secondary: {\n      main: '#214191'\n    }\n  }\n})\n\nexport default theme\n","import React, { useEffect } from 'react'\n\nimport { loadNetworkElements } from './store/networkElementsSlice'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { MuiThemeProvider, makeStyles } from '@material-ui/core/styles'\n\nimport Header from './components/Header'\nimport Sidebar from './components/Sidebar'\nimport NetworkElementStep from './components/NetworkElementStep'\nimport OperationTypeStep from './components/OperationTypeStep'\nimport SummaryStep from './components/SummaryStep'\nimport ScheduleToast from './components/ScheduleToast'\nimport theme from './theme'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh'\n  },\n  container: {\n    display: 'flex',\n    flex: 1\n  },\n  nav: {\n    flex: 1\n  },\n  main: {\n    flex: 3,\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}))\n\nfunction Wizard () {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const activeStep = useSelector((state) => state.wizard.activeStep)\n\n  useEffect(() => {\n    dispatch(loadNetworkElements())\n  })\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <header>\n          <Header />\n        </header>\n        <section className={classes.container}>\n          <nav className={classes.nav}>\n            <Sidebar activeStep={activeStep} />\n          </nav>\n          <main className={classes.main}>\n            {(activeStep === 0 &&\n              <NetworkElementStep />\n            ) || (activeStep === 1 &&\n              <OperationTypeStep />\n            ) || (activeStep === 2 &&\n              <SummaryStep />\n            )}\n          </main>\n        </section>\n        <ScheduleToast />\n      </div>\n    </MuiThemeProvider>\n  )\n}\n\nexport default Wizard\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { Provider } from 'react-redux'\nimport store from './store/store'\nimport Wizard from './Wizard'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Wizard />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}