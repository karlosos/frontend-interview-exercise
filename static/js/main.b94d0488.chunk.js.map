{"version":3,"sources":["api/networkElements.js","store/networkElementsSlice.js","store/wizardSlice.js","api/scheduleLogger.js","sagas/sagas.js","store/store.js","components/Header.js","components/Sidebar.js","components/NetworkElementsList.js","components/NetworkElementSearch.js","components/NetworkElementControls.js","components/NetworkElementStep.js","components/OperationTypeControls.js","common/constants.js","components/OperationTypePicker.js","components/OperationTypeStep.js","components/SummaryControls.js","components/SummaryStep.js","components/ScheduleToast.js","theme.js","Wizard.js","reportWebVitals.js","index.js"],"names":["networkElements","id","ip","type","dn","name","swVersion","networkElementsSlice","createSlice","initialState","data","reducers","loadNetworkElements","state","clearNetworkElements","actions","wizardSlice","selectedNetworkElements","selectedOperation","undefined","activeStep","toast","open","success","scheduleSent","setSelectedNetworkElements","action","payload","setSelectedOperation","cancel","schedule","setScheduleSuccess","forward","back","setToastOpen","setToast","requestPutSchedule","axios","request","method","url","watchSchedule","handleSchedule","rootSaga","takeEvery","select","filter","el","wizard","includes","call","date","Date","now","put","console","error","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","networkElementsReducer","wizardReducer","middleware","getDefaultMiddleware","concat","run","useStyles","makeStyles","theme","root","boxShadow","backgroundColor","borderBottom","palette","grey","title","flexGrow","color","primary","dark","Header","classes","AppBar","position","className","Toolbar","Typography","variant","colorPrimary","borderRight","height","backButton","marginRight","spacing","Sidebar","steps","label","description","Stepper","orientation","map","step","Step","expanded","StepLabel","stepLabel","StepContent","headCells","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","headCell","align","numeric","disablePadding","flex","tableContainer","paper","width","marginBottom","table","minWidth","row","cursor","EnhancedTable","dispatch","useDispatch","TableContainer","Table","size","stickyHeader","length","event","target","newSelecteds","n","TableBody","index","isItemSelected","indexOf","labelId","hover","onClick","selectedIndex","newSelected","slice","handleClick","role","tabIndex","selected","component","scope","search","borderRadius","shape","alpha","common","white","marginLeft","breakpoints","up","searchIcon","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","NetworkElementSearch","InputBase","placeholder","input","NetworkElementControls","isSelectedElement","Button","disabled","NetworkElementStep","useSelector","cancelButton","OperationTypeControls","isSelectedOperation","operationTypes","update_software","downgrade_software","operationType","margin","lighten","main","OperationTypeCheckbox","handleChange","Paper","OperationTypePicker","OperationTypeStep","SummaryControls","summary","marginTop","sectionHeader","SummaryStep","selectedNetworkElementsData","Alert","elevation","ScheduleToast","setScheduleToastOpen","scheduleToastOpen","handleClose","reason","onClose","severity","Snackbar","autoHideDuration","createTheme","secondary","flexDirection","container","nav","Wizard","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"qNAAMA,EAAkB,CACtB,CACEC,GAAI,IACJC,GAAI,cACJC,KAAM,SACNC,GAAI,gCACJC,KAAM,kBACNC,UAAW,sBAEb,CACEL,GAAI,IACJC,GAAI,eACJC,KAAM,SACNC,GAAI,4BACJC,KAAM,UACNC,UAAW,sBAEb,CACEL,GAAI,IACJC,GAAI,cACJC,KAAM,SACNC,GAAI,8BACJC,KAAM,kBACNC,UAAW,sBAEb,CACEL,GAAI,IACJC,GAAI,eACJC,KAAM,SACNC,GAAI,6BACJC,KAAM,kBACNC,UAAW,sBAEb,CACEL,GAAI,IACJC,GAAI,cACJC,KAAM,SACNC,GAAI,8BACJC,KAAM,kBACNC,UAAW,sBAEb,CACEL,GAAI,IACJC,GAAI,iBACJC,KAAM,SACNC,GAAI,6BACJC,KAAM,kBACNC,UAAW,sBAEb,CACEL,GAAI,IACJC,GAAI,cACJC,KAAM,SACNC,GAAI,+BACJC,KAAM,UACNC,UAAW,sBAEb,CACEL,GAAI,IACJC,GAAI,cACJC,KAAM,SACNC,GAAI,MACJC,KAAM,UACNC,UAAW,sBAEb,CACEL,GAAI,IACJC,GAAI,cACJC,KAAM,SACNC,GAAI,gCACJC,KAAM,UACNC,UAAW,sBAEb,CACEL,GAAI,IACJC,GAAI,cACJC,KAAM,SACNC,GAAI,MACJC,KAAM,UACNC,UAAW,uBC5EFC,EAAuBC,YAAY,CAC9CH,KAAM,kBACNI,aAAc,CACZC,KAAM,IAERC,SAAU,CACRC,oBAAqB,SAACC,GACpBA,EAAMH,KAAOV,GAEfc,qBAAsB,SAACD,GACrBA,EAAMH,KAAO,OAMZ,EAAsDH,EAAqBQ,QAAnEH,EAAR,EAAQA,oBACAL,GADR,EAA6BO,qBACrBP,EAAf,SClBaS,EAAcR,YAAY,CACrCH,KAAM,SACNI,aAAc,CACZQ,wBAAyB,GACzBC,uBAAmBC,EACnBC,WAAY,EACZC,MAAO,CACLC,MAAM,EACNC,aAASJ,GAEXK,cAAc,GAEhBb,SAAU,CACRc,2BAA4B,SAACZ,EAAOa,GAClCb,EAAMI,wBAA0BS,EAAOC,SAEzCC,qBAAsB,SAACf,EAAOa,GAC5Bb,EAAMK,kBAAoBQ,EAAOC,SAEnCE,OAAQ,SAAChB,GAEPA,EAAMI,wBAA0B,GAChCJ,EAAMK,uBAAoBC,EAC1BN,EAAMO,WAAa,EACnBP,EAAMW,cAAe,GAEvBM,SAAU,SAACjB,EAAOa,KAGlBK,mBAAoB,SAAClB,GACnBA,EAAMW,cAAe,GAEvBQ,QAAS,SAACnB,GACRA,EAAMO,WAAaP,EAAMO,WAAa,GAExCa,KAAM,SAACpB,GACLA,EAAMO,WAAaP,EAAMO,WAAa,EACtCP,EAAMW,cAAe,GAEvBU,aAAc,SAACrB,EAAOa,GACpBb,EAAMQ,MAAMC,KAAOI,EAAOC,SAE5BQ,SAAU,SAACtB,EAAOa,GAChBb,EAAMQ,MAAQK,EAAOC,YAMpB,EAA0IX,EAAYD,QAA9IU,EAAR,EAAQA,2BAA4BG,EAApC,EAAoCA,qBAAsBC,EAA1D,EAA0DA,OAAQG,EAAlE,EAAkEA,QAASC,EAA3E,EAA2EA,KAAMH,EAAjF,EAAiFA,SAAUC,EAA3F,EAA2FA,mBAAoBG,EAA/G,EAA+GA,aAAcC,EAA7H,EAA6HA,SACrHnB,IAAf,Q,0CClDA,SAASoB,EAAoBT,GAM3B,OALgBU,IAAMC,QAAQ,CAC5BC,OAAQ,OACRC,IAAK,0HACL9B,KAAMiB,I,eCFCc,G,WAIAC,G,WAsBeC,GA1B1B,SAAWF,IAAX,iEACE,OADF,SACQG,YAAUd,EAAS3B,KAAMuC,GADjC,uCAIA,SAAWA,IAAX,yEACkC,OADlC,SACwCG,aAAO,SAAAhC,GAE3C,OADwBA,EAAMb,gBAAgBU,KACvBoC,QAAO,SAAAC,GAAE,OAAIlC,EAAMmC,OAAO/B,wBAAwBgC,SAASF,EAAG9C,UAHzF,OAK4B,OAJpBgB,EADR,gBAKkC4B,aAAO,SAAAhC,GAAK,OAAIA,EAAMmC,OAAO9B,qBAL/D,OAOI,OAFIA,EALR,yBAOUgC,YAAKd,EACT,CACEnB,wBAAyBA,EACzBC,kBAAmBA,EACnBiC,KAAMC,KAAKC,QAXnB,OAcI,OAdJ,UAcUC,YAAInB,EAAS,CAAEb,MAAM,EAAMC,SAAS,KAd9C,QAeI,OAfJ,UAeU+B,YAAIvB,KAfd,gCAkBI,OAlBJ,0BAiBIwB,QAAQC,MAAR,MAjBJ,UAkBUF,YAAInB,EAAS,CAAEb,MAAM,EAAMC,SAAS,KAlB9C,sDAsBe,SAAWoB,IAAX,iEACb,OADa,SACPc,YAAI,CACRhB,MAFW,uCCxBf,IAAMiB,EAAiBC,cAEjBC,EAAQC,YAAe,CAC3BC,QAAS,CACP9D,gBAAiB+D,EACjBf,OAAQgB,GAEVC,WAAY,SAACC,GAAD,OAA0BA,IAAuBC,OAAOT,MAEtEA,EAAeU,IAAIzB,GAEJiB,Q,oDCXTS,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,UAAW,OACXC,gBAAiB,OACjBC,aAAa,aAAD,OAAeJ,EAAMK,QAAQC,KAAK,OAEhDC,MAAO,CACLC,SAAU,EACVC,MAAM,GAAD,OAAKT,EAAMK,QAAQK,QAAQC,WAkBrBC,MAdf,WACE,IAAMC,EAAUf,IAEhB,OACE,cAACgB,EAAA,EAAD,CAAQC,SAAS,SAASC,UAAWH,EAAQZ,KAA7C,SACE,cAACgB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKH,UAAWH,EAAQN,MAAOM,QAAS,CAAEO,aAAcP,EAAQN,OAApF,sD,oCCjBFT,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJoB,YAAY,aAAD,OAAerB,EAAMK,QAAQC,KAAK,MAC7CgB,OAAQ,QAEVC,WAAY,CACVC,YAAaxB,EAAMyB,QAAQ,QAuChBC,OAlBf,YAAmC,IAAf7E,EAAc,EAAdA,WACZgE,EAAUf,IACV6B,EAlBC,CACL,CACEC,MAAO,kBACPC,YAAa,kDAEf,CACED,MAAO,iBACPC,YAAa,iDAEf,CACED,MAAO,UACPC,YAAa,qCASjB,OACE,qBAAKb,UAAWH,EAAQZ,KAAxB,SACE,cAAC6B,EAAA,EAAD,CAASjF,WAAYA,EAAYkF,YAAY,WAA7C,SACGJ,EAAMK,KAAI,SAACC,GAAD,OACT,eAACC,EAAA,EAAD,CAAuBC,UAAQ,EAA/B,UACE,cAACC,EAAA,EAAD,CAAWpB,UAAWH,EAAQwB,UAA9B,SAAyC,cAACnB,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0Bc,EAAKL,UACxE,cAACU,EAAA,EAAD,UAAcL,EAAKJ,gBAFVI,EAAKL,e,sEC9BpBW,GAAY,CAChB,CACE7G,GAAI,KACJkG,MAAO,MAET,CACElG,GAAI,OACJkG,MAAO,QAET,CACElG,GAAI,KACJkG,MAAO,OAIX,SAASY,GAAmBC,GAC1B,IAAQC,EAA4CD,EAA5CC,iBAAkBC,EAA0BF,EAA1BE,YAAaC,EAAaH,EAAbG,SAEvC,OACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,QAAQ,WAAnB,SACE,cAACC,GAAA,EAAD,CACEC,cAAeP,EAAc,GAAKA,EAAcC,EAChDO,QAASP,EAAW,GAAKD,IAAgBC,EACzCQ,SAAUV,EACVW,WAAY,CAAE,aAAc,mCAG/Bd,GAAUP,KAAI,SAACsB,GAAD,OACb,cAACP,GAAA,EAAD,CAEEQ,MAAOD,EAASE,QAAU,QAAU,OACpCR,QAASM,EAASG,eAAiB,OAAS,SAH9C,SAKGH,EAAS1B,OAJL0B,EAAS5H,YAY1B,IAAMoE,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJyD,KAAM,GAERC,eAAgB,GAEhBC,MAAO,CACLC,MAAO,OACPC,aAAc9D,EAAMyB,QAAQ,IAE9BsC,MAAO,CACLC,SAAU,KAEZC,IAAK,CACHC,OAAQ,eAIG,SAASC,GAAT,GAAuE,IAA7C1I,EAA4C,EAA5CA,gBAAiBiB,EAA2B,EAA3BA,wBAClDmE,EAAUf,KACVsE,EAAWC,cAiCjB,OACE,qBAAKrD,UAAWH,EAAQZ,KAAxB,SACE,cAACqE,GAAA,EAAD,CAAgBtD,UAAWH,EAAQ8C,eAAnC,SACE,eAACY,GAAA,EAAD,CACEvD,UAAWH,EAAQkD,MACnB,kBAAgB,aAChBS,KAAK,SACL,aAAW,iBACXC,cAAY,EALd,UAOE,cAACjC,GAAD,CACE3B,QAASA,EACT8B,YAAajG,EAAwBgI,OACrChC,iBA5CmB,SAACiC,GAC5B,GAAIA,EAAMC,OAAOzB,QAAjB,CACE,IAAM0B,EAAepJ,EAAgBuG,KAAI,SAAC8C,GAAD,OAAOA,EAAEpJ,MAClD0I,EAASlH,EAA2B2H,SAGtCT,EAASlH,EAA2B,MAuC5B0F,SAAUnH,EAAgBiJ,SAE5B,cAACK,GAAA,EAAD,UACGtJ,EACEuG,KAAI,SAACiC,EAAKe,GACT,IArBMlJ,EAqBAmJ,GArBAnJ,EAqB4BmI,EAAIvI,IArBoB,IAA3CgB,EAAwBwI,QAAQpJ,IAsBzCqJ,EAAO,kCAA8BH,GAE3C,OACE,eAAClC,GAAA,EAAD,CACE9B,UAAWH,EAAQoD,IACnBmB,OAAK,EACLC,QAAS,SAACV,GAAD,OAhDP,SAACA,EAAOjJ,GAC1B,IAAM4J,EAAgB5I,EAAwBwI,QAAQxJ,GAClD6J,EAAc,IAEK,IAAnBD,EACFC,EAAcA,EAAY3F,OAAOlD,EAAyBhB,GAC/B,IAAlB4J,EACTC,EAAcA,EAAY3F,OAAOlD,EAAwB8I,MAAM,IACtDF,IAAkB5I,EAAwBgI,OAAS,EAC5Da,EAAcA,EAAY3F,OAAOlD,EAAwB8I,MAAM,GAAI,IAC1DF,EAAgB,IACzBC,EAAcA,EAAY3F,OACxBlD,EAAwB8I,MAAM,EAAGF,GACjC5I,EAAwB8I,MAAMF,EAAgB,KAIlDlB,EAASlH,EAA2BqI,IA+BAE,CAAYd,EAAOV,EAAIvI,KAC3CgK,KAAK,WACL,eAAcT,EACdU,UAAW,EAEXC,SAAUX,EARZ,UAUE,cAAClC,GAAA,EAAD,CAAWC,QAAQ,WAAnB,SACE,cAACC,GAAA,EAAD,CACEE,QAAS8B,EACT5B,WAAY,CAAE,kBAAmB8B,GACjCnE,UAAU,eAGd,cAAC+B,GAAA,EAAD,CAAW8C,UAAU,KAAKnK,GAAIyJ,EAASW,MAAM,MAAM9C,QAAQ,OAA3D,SACGiB,EAAItI,KAEP,cAACoH,GAAA,EAAD,CAAWQ,MAAM,OAAjB,SAAyBU,EAAIrI,OAC7B,cAACmH,GAAA,EAAD,CAAWQ,MAAM,OAAjB,SAAyBU,EAAIpI,OAdxBoI,EAAIvI,gB,oDCpIvBoE,GAAYC,aAAW,SAACC,GAAD,YAAY,CACvCC,KAAM,CACJO,SAAU,GAEZuF,QAAM,GACJhF,SAAU,WACViF,aAAchG,EAAMiG,MAAMD,aAC1B7F,gBAAiB+F,aAAMlG,EAAMK,QAAQ8F,OAAOC,MAAO,KACnD,UAAW,CACTjG,gBAAiB+F,aAAMlG,EAAMK,QAAQ8F,OAAOC,MAAO,MAErDC,WAAY,EACZxC,MAAO,QARH,eASH7D,EAAMsG,YAAYC,GAAG,MAAQ,CAC5B1C,MAAO,SAVL,kDAYuB7D,EAAMK,QAAQC,KAAK,OAZ1C,GAcNkG,WAAY,CACVxD,QAAShD,EAAMyB,QAAQ,EAAG,GAC1BH,OAAQ,OACRP,SAAU,WACV0F,cAAe,OACfC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,UAAW,CACTpG,MAAO,UACPoD,MAAO,QAETiD,WAAY,CACV9D,QAAShD,EAAMyB,QAAQ,EAAG,EAAG,EAAG,GAChCsF,YAAY,cAAD,OAAgB/G,EAAMyB,QAAQ,GAA9B,YAwBAuF,OApBf,WACE,IAAMnG,EAAUf,KAEhB,OACE,sBAAKkB,UAAWH,EAAQkF,OAAxB,UACE,qBAAK/E,UAAWH,EAAQ2F,WAAxB,SACE,cAAC,KAAD,MAEF,cAACS,GAAA,EAAD,CACEC,YAAY,eACZrG,QAAS,CACPZ,KAAMY,EAAQgG,UACdM,MAAOtG,EAAQiG,YAEjBzD,WAAY,CAAE,aAAc,gB,UCnD9BvD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ+C,QAAShD,EAAMyB,QAAQ,GACvBiF,QAAS,OACTE,eAAgB,YAElBrF,WAAY,CACVC,YAAaxB,EAAMyB,QAAQ,QAgChB2F,OA5Bf,YAAyD,IAAtBC,EAAqB,EAArBA,kBAC3BxG,EAAUf,KACVsE,EAAWC,cAMjB,OACE,sBAAKrD,UAAWH,EAAQZ,KAAxB,UACE,cAACqH,GAAA,EAAD,CACEC,UAAQ,EACRvG,UAAWH,EAAQU,WAFrB,oBAMA,cAAC+F,GAAA,EAAD,CACEnG,QAAQ,YACRV,MAAM,UACN4E,QAfsB,WAC1BjB,EAAS3G,MAeL8J,UAAWF,EAJb,0BCbSG,OAdf,WACE,IAAM/L,EAAkBgM,aAAY,SAACnL,GAAD,OAAWA,EAAMb,gBAAgBU,QAC/DO,EAA0B+K,aAAY,SAACnL,GAAD,OAAWA,EAAMmC,OAAO/B,2BAEpE,OACE,qCACE,cAAC,GAAD,IACA,cAAC,GAAD,CAAqBjB,gBAAiBA,EAAiBiB,wBAAyBA,IAChF,cAAC,GAAD,CAAwB2K,kBAAmB3K,EAAwBgI,OAAS,QCP5E5E,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ+C,QAAShD,EAAMyB,QAAQ,GACvBiF,QAAS,OACTE,eAAgB,YAElBc,aAAc,CACZlG,YAAaxB,EAAMyB,QAAQ,IAE7BF,WAAY,CACVC,YAAaxB,EAAMyB,QAAQ,QA8ChBkG,OA1Cf,YAA0D,IAAxBC,EAAuB,EAAvBA,oBAC1B/G,EAAUf,KACVsE,EAAWC,cAcjB,OACE,sBAAKrD,UAAWH,EAAQZ,KAAxB,UACE,cAACqH,GAAA,EAAD,CACEtG,UAAWH,EAAQ6G,aACnBrC,QAZoB,WACxBjB,EAAS9G,MASP,oBAMA,cAACgK,GAAA,EAAD,CACEtG,UAAWH,EAAQU,WACnB8D,QAdkB,WACtBjB,EAAS1G,MAWP,kBAMA,cAAC4J,GAAA,EAAD,CACEnG,QAAQ,YACRV,MAAM,UACN4E,QA7BsB,WAC1BjB,EAAS3G,MA6BL8J,UAAWK,EAJb,0B,UCnDAC,GAAiB,CACrBC,gBAAiB,CACflG,MAAO,kBACPC,YAAa,0CAEfkG,mBAAoB,CAClBnG,MAAO,qBACPC,YAAa,qCCEX/B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJyD,KAAM,GAERsE,cAAe,CACbC,OAAQjI,EAAMyB,QAAQ,GACtBuB,QAAShD,EAAMyB,QAAQ,GACvBiF,QAAS,OACTE,eAAgB,gBAChBzG,gBAAiB,SAAAsC,GACf,OAAIA,EAAM8E,SACDvH,EAAMK,QAAQC,KAAK,KAExBmC,EAAMU,QACD+E,aAAQlI,EAAMK,QAAQK,QAAQyH,KAAM,IAEtC,IAET1H,MAAO,SAAAgC,GAAK,OAAIA,EAAM8E,SAAWvH,EAAMK,QAAQC,KAAK,KAAO,IAC3D4D,OAAQ,SAAAzB,GAAK,OAAKA,EAAM8E,SAAuB,OAAZ,YAErC3D,MAAO,CACLC,MAAO,OACPC,aAAc9D,EAAMyB,QAAQ,IAE9BsC,MAAO,CACLC,SAAU,SAId,SAASoE,GAAT,GAAqF,IAAnDJ,EAAkD,EAAlDA,cAAe7E,EAAmC,EAAnCA,QAASoE,EAA0B,EAA1BA,SAAUc,EAAgB,EAAhBA,aAC5DxH,EAAUf,GAAU,CAAEqD,UAASoE,aACrC,OACE,eAACe,GAAA,EAAD,CACEtH,UAAWH,EAAQmH,cACnB3C,QAAUkC,OAAyD3K,EAA9C,kBAAMyL,GAAclF,EAAS6E,IAFpD,UAIE,gCACE,cAAC9G,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACG0G,GAAeG,GAAepG,QAEjC,cAACV,EAAA,EAAD,UACG2G,GAAeG,GAAenG,iBAGnC,8BACE,cAACoB,GAAA,EAAD,CACEsE,SAAUA,EACVpE,QAASA,EAETrH,KAAI,UAAKkM,GACTvH,MAAM,iBA0BD8H,OAnBf,YAAsD,IAAtB5L,EAAqB,EAArBA,kBACxBkE,EAAUf,KACVsE,EAAWC,cAEXgE,EAAe,SAAClF,EAAS6E,GAE3B5D,EAAS/G,EADP8F,EAC4B6E,OAEApL,KAGlC,OACE,sBAAKoE,UAAWH,EAAQZ,KAAxB,UACE,cAACmI,GAAD,CAAuBJ,cAAc,kBAAkB7E,QAA+B,oBAAtBxG,EAAyC0L,aAAcA,IACvH,cAACD,GAAD,CAAuBJ,cAAc,qBAAqB7E,QAA+B,uBAAtBxG,EAA4C0L,aAAcA,EAAcd,UAAQ,QClE1IiB,OAVf,WACE,IAAM7L,EAAoB8K,aAAY,SAACnL,GAAD,OAAWA,EAAMmC,OAAO9B,qBAC9D,OACE,qCACE,cAAC,GAAD,CAAqBA,kBAAmBA,IACxC,cAAC,GAAD,CAAuBiL,oBAAqBjL,QCH5CmD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ+C,QAAShD,EAAMyB,QAAQ,GACvBiF,QAAS,OACTE,eAAgB,YAElBc,aAAc,CACZlG,YAAaxB,EAAMyB,QAAQ,IAE7BF,WAAY,CACVC,YAAaxB,EAAMyB,QAAQ,QA+ChBgH,OA3Cf,WACE,IAAM5H,EAAUf,KACVsE,EAAWC,cACXpH,EAAewK,aAAY,SAAAnL,GAAK,OAAIA,EAAMmC,OAAOxB,gBAcvD,OACE,sBAAK+D,UAAWH,EAAQZ,KAAxB,UACE,cAACqH,GAAA,EAAD,CACEtG,UAAWH,EAAQ6G,aACnBrC,QAZoB,WACxBjB,EAAS9G,MASP,oBAMA,cAACgK,GAAA,EAAD,CACEtG,UAAWH,EAAQ6G,aACnBrC,QAdkB,WACtBjB,EAAS1G,MAWP,kBAMA,cAAC4J,GAAA,EAAD,CACEnG,QAAQ,YACRV,MAAM,UACN4E,QA7BsB,WAC1BjB,EAAS7G,MA6BLgK,SAAUtK,EAJZ,0BCrCA6C,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0I,QAAS,CACP1F,QAAShD,EAAMyB,QAAQ,GACvBiC,KAAM,GAERC,eAAgB,CACdgF,UAAW3I,EAAMyB,QAAQ,GACzBqC,aAAc9D,EAAMyB,QAAQ,IAE9BmH,cAAe,CACb9E,aAAc9D,EAAMyB,QAAQ,GAC5BrB,aAAa,aAAD,OAAeJ,EAAMK,QAAQC,KAAK,WAuDnCuI,OAnDf,WACE,IAAMhI,EAAUf,KAEVpD,EAA0B+K,aAAY,SAACnL,GAAD,OAAWA,EAAMmC,OAAO/B,2BAC9DC,EAAoB8K,aAAY,SAACnL,GAAD,OAAWA,EAAMmC,OAAO9B,qBACxDmM,EAA8BrB,aAAY,SAACnL,GAAD,OAAWA,EAAMb,gBAAgBU,KAAKoC,QAAO,SAACC,GAAD,OAAQ9B,EAAwBgC,SAASF,EAAG9C,UAEzI,OACE,qCACE,sBAAKsF,UAAWH,EAAQ6H,QAAxB,UACE,cAACxH,EAAA,EAAD,CAAYC,QAAQ,KAAKH,UAAWH,EAAQ+H,cAA5C,8BAIA,cAACtE,GAAA,EAAD,CAAgBuB,UAAWyC,KAAOtH,UAAWH,EAAQ8C,eAArD,SACE,eAACY,GAAA,EAAD,CAAO,aAAW,eAAlB,UACE,cAAC1B,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,yBACA,cAACA,GAAA,EAAD,sBACA,cAACA,GAAA,EAAD,yBACA,cAACA,GAAA,EAAD,8BAGJ,cAACgC,GAAA,EAAD,UACG+D,EAA4B9G,KAAI,SAACiC,GAAD,OAC/B,eAACnB,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAW8C,UAAU,KAAKC,MAAM,MAAhC,SACG7B,EAAItI,KAEP,cAACoH,GAAA,EAAD,CAAWQ,MAAM,OAAjB,SAAyBU,EAAInI,OAC7B,cAACiH,GAAA,EAAD,CAAWQ,MAAM,OAAjB,SAAyBU,EAAIrI,OAC7B,cAACmH,GAAA,EAAD,CAAWQ,MAAM,OAAjB,SAAyBU,EAAIlI,cANhBkI,EAAIvI,cAa3B,cAACwF,EAAA,EAAD,CAAYC,QAAQ,KAAKH,UAAWH,EAAQ+H,cAA5C,4BAGA,cAAC1H,EAAA,EAAD,UACG2G,GAAelL,GAAmBiF,WAGvC,cAAC,GAAD,Q,6BCtEN,SAASmH,GAAOtG,GACd,OAAO,cAAC,KAAD,cAAUuG,UAAW,EAAG7H,QAAQ,UAAasB,IAuCvCwG,OApCf,YAAkD,EAAxBC,qBAAyB,IAc7CpM,EAbEsH,EAAWC,cAEX8E,EAAoB1B,aAAY,SAACnL,GAAD,OAAWA,EAAMmC,OAAO3B,MAAMC,QAG9DqM,EAAc,SAACzE,EAAO0E,GACX,cAAXA,GAIJjF,EAASzG,GAAa,KAkBxB,OAbEb,EAZc2K,aAAY,SAACnL,GAAD,OAAWA,EAAMmC,OAAO3B,MAAME,WAatD,cAAC,GAAD,CAAOsM,QAASF,EAAaG,SAAS,UAAtC,mDAMA,cAAC,GAAD,CAAOD,QAASF,EAAaG,SAAS,QAAtC,mCAOF,cAACC,GAAA,EAAD,CAAUzM,KAAMoM,EAAmBM,iBAAkB,IAAMH,QAASF,EAApE,SACGtM,K,SC5BQkD,GAXD0J,aAAY,CACxBrJ,QAAS,CACPK,QAAS,CACPyH,KAAM,WAERwB,UAAW,CACTxB,KAAM,cCKNrI,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJyG,QAAS,OACTkD,cAAe,SACftI,OAAQ,SAEVuI,UAAW,CACTnD,QAAS,OACThD,KAAM,GAERoG,IAAK,CACHpG,KAAM,GAERyE,KAAM,CACJzE,KAAM,EACNgD,QAAS,OACTkD,cAAe,cAuCJG,OApCf,WACE,IAAMlJ,EAAUf,KACVjD,EAAa4K,aAAY,SAACnL,GAAD,OAAWA,EAAMmC,OAAO5B,cAEjDuH,EAAWC,cAMjB,OAJA2F,qBAAU,WACR5F,EAAS/H,QAIT,cAAC,IAAD,CAAkB2D,MAAOA,GAAzB,SACE,sBAAKgB,UAAWH,EAAQZ,KAAxB,UACE,iCACE,cAAC,EAAD,MAEF,0BAASe,UAAWH,EAAQgJ,UAA5B,UACE,qBAAK7I,UAAWH,EAAQiJ,IAAxB,SACE,cAAC,GAAD,CAASjN,WAAYA,MAEvB,sBAAMmE,UAAWH,EAAQsH,KAAzB,SACmB,IAAftL,GACA,cAAC,GAAD,KACmB,IAAfA,GACJ,cAAC,GAAD,KACmB,IAAfA,GACJ,cAAC,GAAD,SAIN,cAAC,GAAD,UClDOoN,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAD,CAAUtL,MAAOA,EAAjB,SACE,cAAC,GAAD,MAEFuL,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b94d0488.chunk.js","sourcesContent":["const networkElements = [\n  {\n    id: '0',\n    ip: '10.10.10.10',\n    type: 'eNodeB',\n    dn: 'PLMN-PLMN/MRBTS-4321/LNBTS-01',\n    name: 'MRBT_test_SM_AG',\n    swVersion: 'SW_00323_92034_395'\n  },\n  {\n    id: '1',\n    ip: '10.128.32.14',\n    type: 'eNodeB',\n    dn: 'PLMN-PLMN/MRBTS-1/LNBTS-4',\n    name: '5G_500%',\n    swVersion: 'SW_03482_19342_102'\n  },\n  {\n    id: '2',\n    ip: '10.11.12.13',\n    type: 'eNodeB',\n    dn: 'PLMN-PLMN/MRBTS-21/LNBTS-21',\n    name: 'MRBT_test_SM_AG',\n    swVersion: 'SW_00323_92034_395'\n  },\n  {\n    id: '3',\n    ip: '10.154.23.41',\n    type: 'eNodeB',\n    dn: 'PLMN-PLMN/MRBTS-31/LNBTS-1',\n    name: 'MRBT_test_SM_AG',\n    swVersion: 'SW_00323_92034_395'\n  },\n  {\n    id: '4',\n    ip: '10.65.56.49',\n    type: 'eNodeB',\n    dn: 'PLMN-PLMN/MRBTS-71/LNBTS-40',\n    name: 'MRBT_test_SM_AG',\n    swVersion: 'SW_00323_92034_395'\n  },\n  {\n    id: '5',\n    ip: '10.115.111.111',\n    type: 'eNodeB',\n    dn: 'PLMN-PLMN/MRBTS-74/LNBTS-6',\n    name: 'MRBT_test_SM_AG',\n    swVersion: 'SW_00323_92034_395'\n  },\n  {\n    id: '6',\n    ip: '10.14.41.15',\n    type: 'eNodeB',\n    dn: 'PLMN-PLMN/MRBTS-241/LNBTS-41',\n    name: '5G_500%',\n    swVersion: 'SW_03482_19342_102'\n  },\n  {\n    id: '7',\n    ip: '10.98.45.65',\n    type: 'eNodeB',\n    dn: 'N/A',\n    name: '5G_500%',\n    swVersion: 'SW_03482_19342_102'\n  },\n  {\n    id: '8',\n    ip: '10.10.54.56',\n    type: 'eNodeB',\n    dn: 'PLMN-PLMN/MRBTS-661/LNBTS-303',\n    name: '5G_500%',\n    swVersion: 'SW_03482_19342_102'\n  },\n  {\n    id: '9',\n    ip: '10.75.65.24',\n    type: 'eNodeB',\n    dn: 'N/A',\n    name: '5G_500%',\n    swVersion: 'SW_03482_19342_102'\n  }\n  // {\n  //   id: '10',\n  //   ip: '10.198.165.23',\n  //   type: 'eNodeB',\n  //   dn: 'PLMN-PLMN/MRBTS-27/LNBTS-36',\n  //   name: '5G_500%',\n  //   swVersion: 'SW_03482_19342_102'\n  // },\n  // {\n  //   id: '11',\n  //   ip: '10.45.65.23',\n  //   type: 'eNodeB',\n  //   dn: 'PLMN-PLMN/MRBTS-9/LNBTS-11',\n  //   name: '5G_500%',\n  //   swVersion: 'SW_03482_19342_102'\n  // },\n  // {\n  //   id: '12',\n  //   ip: '10.23.41.11',\n  //   type: 'eNodeB',\n  //   dn: 'PLMN-PLMN/MRBTS-58/LNBTS-67',\n  //   name: '5G_500%',\n  //   swVersion: 'SW_03482_19342_102'\n  // },\n  // {\n  //   id: '13',\n  //   ip: '10.46.74.23',\n  //   type: 'eNodeB',\n  //   dn: 'PLMN-PLMN/MRBTS-9/LNBTS-8795',\n  //   name: '5G_500%',\n  //   swVersion: 'SW_03482_19342_102'\n  // },\n  // {\n  //   id: '14',\n  //   ip: '10.98.109.100',\n  //   type: 'eNodeB',\n  //   dn: 'PLMN-PLMN/MRBTS-101/LNBTS-100',\n  //   name: '5G_500%',\n  //   swVersion: 'SW_03482_19342_102'\n  // }\n]\n\nexport { networkElements }\n","import { createSlice } from '@reduxjs/toolkit'\nimport { networkElements } from '../api/networkElements'\n\nexport const networkElementsSlice = createSlice({\n  name: 'networkElements',\n  initialState: {\n    data: []\n  },\n  reducers: {\n    loadNetworkElements: (state) => {\n      state.data = networkElements\n    },\n    clearNetworkElements: (state) => {\n      state.data = []\n    }\n  }\n})\n\n// Action creators are generated for each case reducer function\nexport const { loadNetworkElements, clearNetworkElements } = networkElementsSlice.actions\nexport default networkElementsSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const wizardSlice = createSlice({\n  name: 'wizard',\n  initialState: {\n    selectedNetworkElements: [],\n    selectedOperation: undefined,\n    activeStep: 0,\n    toast: {\n      open: false,\n      success: undefined\n    },\n    scheduleSent: false\n  },\n  reducers: {\n    setSelectedNetworkElements: (state, action) => {\n      state.selectedNetworkElements = action.payload\n    },\n    setSelectedOperation: (state, action) => {\n      state.selectedOperation = action.payload\n    },\n    cancel: (state) => {\n      // dispatch(loadNetworkElements())\n      state.selectedNetworkElements = []\n      state.selectedOperation = undefined\n      state.activeStep = 0\n      state.scheduleSent = false\n    },\n    schedule: (state, action) => {\n      // watched by watchSchedule saga\n    },\n    setScheduleSuccess: (state) => {\n      state.scheduleSent = true\n    },\n    forward: (state) => {\n      state.activeStep = state.activeStep + 1\n    },\n    back: (state) => {\n      state.activeStep = state.activeStep - 1\n      state.scheduleSent = false\n    },\n    setToastOpen: (state, action) => {\n      state.toast.open = action.payload\n    },\n    setToast: (state, action) => {\n      state.toast = action.payload\n    }\n  }\n})\n\n// Action creators are generated for each case reducer function\nexport const { setSelectedNetworkElements, setSelectedOperation, cancel, forward, back, schedule, setScheduleSuccess, setToastOpen, setToast } = wizardSlice.actions\nexport default wizardSlice.reducer\n","import axios from 'axios'\n\nfunction requestPutSchedule (payload) {\n  const request = axios.request({\n    method: 'post',\n    url: 'https://frontend-interview-f788d-default-rtdb.europe-west1.firebasedatabase.app/scheduledNetworkElementsOperations.json',\n    data: payload\n  })\n  return request\n}\n\nexport { requestPutSchedule }\n","import { put, takeEvery, all, call, select } from 'redux-saga/effects'\nimport { schedule, setScheduleSuccess, setToast } from '../store/wizardSlice'\nimport { requestPutSchedule } from '../api/scheduleLogger'\n\nfunction * watchSchedule () {\n  yield takeEvery(schedule.type, handleSchedule)\n}\n\nfunction * handleSchedule () {\n  const selectedNetworkElements = yield select(state => {\n    const networkElements = state.networkElements.data\n    return networkElements.filter(el => state.wizard.selectedNetworkElements.includes(el.id))\n  })\n  const selectedOperation = yield select(state => state.wizard.selectedOperation)\n  try {\n    yield call(requestPutSchedule,\n      {\n        selectedNetworkElements: selectedNetworkElements,\n        selectedOperation: selectedOperation,\n        date: Date.now()\n      }\n    )\n    yield put(setToast({ open: true, success: true }))\n    yield put(setScheduleSuccess())\n  } catch (e) {\n    console.error(e)\n    yield put(setToast({ open: true, success: false }))\n  }\n}\n\nexport default function * rootSaga () {\n  yield all([\n    watchSchedule()\n  ])\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport createSagaMiddleware from 'redux-saga'\nimport networkElementsReducer from './networkElementsSlice'\nimport wizardReducer from './wizardSlice'\nimport rootSaga from '../sagas/sagas.js'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = configureStore({\n  reducer: {\n    networkElements: networkElementsReducer,\n    wizard: wizardReducer\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(sagaMiddleware)\n})\nsagaMiddleware.run(rootSaga)\n\nexport default store\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    boxShadow: 'none',\n    backgroundColor: '#fff',\n    borderBottom: `1px solid ${theme.palette.grey[300]}`\n  },\n  title: {\n    flexGrow: 1,\n    color: `${theme.palette.primary.dark}`\n  }\n}))\n\nfunction Header () {\n  const classes = useStyles()\n\n  return (\n    <AppBar position='static' className={classes.root}>\n      <Toolbar>\n        <Typography variant='h6' className={classes.title} classes={{ colorPrimary: classes.title }}>\n          Network Element Operation Scheduler\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Stepper from '@material-ui/core/Stepper'\nimport Step from '@material-ui/core/Step'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport { StepContent, Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    borderRight: `1px solid ${theme.palette.grey[300]}`,\n    height: '100%'\n  },\n  backButton: {\n    marginRight: theme.spacing(1)\n  }\n}))\n\nfunction getSteps () {\n  return [\n    {\n      label: 'Network Element',\n      description: 'At least one Network Element shall be selected'\n    },\n    {\n      label: 'Operation Type',\n      description: 'At least one Operation Type shall be selected'\n    },\n    {\n      label: 'Summary',\n      description: 'Statement of scheduled operation'\n    }\n  ]\n}\n\nfunction Sidebar ({ activeStep }) {\n  const classes = useStyles()\n  const steps = getSteps()\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} orientation='vertical'>\n        {steps.map((step) => (\n          <Step key={step.label} expanded>\n            <StepLabel className={classes.stepLabel}><Typography variant='h6'>{step.label}</Typography></StepLabel>\n            <StepContent>{step.description}</StepContent>\n          </Step>\n        ))}\n      </Stepper>\n    </div>\n  )\n}\n\nexport default Sidebar\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setSelectedNetworkElements } from '../store/wizardSlice'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\n\nconst headCells = [\n  {\n    id: 'ip',\n    label: 'IP'\n  },\n  {\n    id: 'type',\n    label: 'Type'\n  },\n  {\n    id: 'dn',\n    label: 'DN'\n  }\n]\n\nfunction EnhancedTableHead (props) {\n  const { onSelectAllClick, numSelected, rowCount } = props\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding='checkbox'>\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all network elements' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n          >\n            {headCell.label}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flex: 1\n  },\n  tableContainer: {\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  row: {\n    cursor: 'pointer'\n  }\n}))\n\nexport default function EnhancedTable ({ networkElements, selectedNetworkElements }) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = networkElements.map((n) => n.id)\n      dispatch(setSelectedNetworkElements(newSelecteds))\n      return\n    }\n    dispatch(setSelectedNetworkElements([]))\n  }\n\n  const handleClick = (event, id) => {\n    const selectedIndex = selectedNetworkElements.indexOf(id)\n    let newSelected = []\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selectedNetworkElements, id)\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selectedNetworkElements.slice(1))\n    } else if (selectedIndex === selectedNetworkElements.length - 1) {\n      newSelected = newSelected.concat(selectedNetworkElements.slice(0, -1))\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selectedNetworkElements.slice(0, selectedIndex),\n        selectedNetworkElements.slice(selectedIndex + 1)\n      )\n    }\n\n    dispatch(setSelectedNetworkElements(newSelected))\n  }\n\n  const isSelected = (name) => selectedNetworkElements.indexOf(name) !== -1\n\n  return (\n    <div className={classes.root}>\n      <TableContainer className={classes.tableContainer}>\n        <Table\n          className={classes.table}\n          aria-labelledby='tableTitle'\n          size='medium'\n          aria-label='enhanced table'\n          stickyHeader\n        >\n          <EnhancedTableHead\n            classes={classes}\n            numSelected={selectedNetworkElements.length}\n            onSelectAllClick={handleSelectAllClick}\n            rowCount={networkElements.length}\n          />\n          <TableBody>\n            {networkElements\n              .map((row, index) => {\n                const isItemSelected = isSelected(row.id)\n                const labelId = `enhanced-table-checkbox-${index}`\n\n                return (\n                  <TableRow\n                    className={classes.row}\n                    hover\n                    onClick={(event) => handleClick(event, row.id)}\n                    role='checkbox'\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.id}\n                    selected={isItemSelected}\n                  >\n                    <TableCell padding='checkbox'>\n                      <Checkbox\n                        checked={isItemSelected}\n                        inputProps={{ 'aria-labelledby': labelId }}\n                        className='checkbox'\n                      />\n                    </TableCell>\n                    <TableCell component='th' id={labelId} scope='row' padding='none'>\n                      {row.ip}\n                    </TableCell>\n                    <TableCell align='left'>{row.type}</TableCell>\n                    <TableCell align='left'>{row.dn}</TableCell>\n                  </TableRow>\n                )\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport InputBase from '@material-ui/core/InputBase'\nimport { alpha, makeStyles } from '@material-ui/core/styles'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 'auto'\n    },\n    borderBottom: `1px solid ${theme.palette.grey[300]}`\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`\n  }\n}))\n\nfunction NetworkElementSearch () {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        <SearchIcon />\n      </div>\n      <InputBase\n        placeholder='Search…'\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput\n        }}\n        inputProps={{ 'aria-label': 'search' }}\n      />\n    </div>\n  )\n}\n\nexport default NetworkElementSearch\n","import React from 'react'\nimport { forward } from '../store/wizardSlice'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport { useDispatch } from 'react-redux'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  backButton: {\n    marginRight: theme.spacing(1)\n  }\n}))\n\nfunction NetworkElementControls ({ isSelectedElement }) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const handleContinueClick = () => {\n    dispatch(forward())\n  }\n\n  return (\n    <div className={classes.root}>\n      <Button\n        disabled\n        className={classes.backButton}\n      >\n        Cancel\n      </Button>\n      <Button\n        variant='contained'\n        color='primary'\n        onClick={handleContinueClick}\n        disabled={!isSelectedElement}\n      >\n        Continue\n      </Button>\n    </div>\n  )\n}\n\nexport default NetworkElementControls\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport NetworkElementsList from './NetworkElementsList'\nimport NetworkElementSearch from './NetworkElementSearch'\nimport NetworkElementControls from './NetworkElementControls'\n\nfunction NetworkElementStep () {\n  const networkElements = useSelector((state) => state.networkElements.data)\n  const selectedNetworkElements = useSelector((state) => state.wizard.selectedNetworkElements)\n\n  return (\n    <>\n      <NetworkElementSearch />\n      <NetworkElementsList networkElements={networkElements} selectedNetworkElements={selectedNetworkElements} />\n      <NetworkElementControls isSelectedElement={selectedNetworkElements.length > 0} />\n    </>\n\n  )\n}\n\nexport default NetworkElementStep\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport { useDispatch } from 'react-redux'\n\nimport { forward, back, cancel } from '../store/wizardSlice'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  cancelButton: {\n    marginRight: theme.spacing(1)\n  },\n  backButton: {\n    marginRight: theme.spacing(1)\n  }\n}))\n\nfunction OperationTypeControls ({ isSelectedOperation }) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const handleContinueClick = () => {\n    dispatch(forward())\n  }\n\n  const handleCancelClick = () => {\n    dispatch(cancel())\n  }\n\n  const handleBackClick = () => {\n    dispatch(back())\n  }\n\n  return (\n    <div className={classes.root}>\n      <Button\n        className={classes.cancelButton}\n        onClick={handleCancelClick}\n      >\n        Cancel\n      </Button>\n      <Button\n        className={classes.backButton}\n        onClick={handleBackClick}\n      >\n        Back\n      </Button>\n      <Button\n        variant='contained'\n        color='primary'\n        onClick={handleContinueClick}\n        disabled={!isSelectedOperation}\n      >\n        Continue\n      </Button>\n    </div>\n  )\n}\n\nexport default OperationTypeControls\n","const operationTypes = {\n  update_software: {\n    label: 'Update Software',\n    description: 'SW upgrade on NE to the latest version'\n  },\n  downgrade_software: {\n    label: 'Downgrade Software',\n    description: 'SW downgrade to the previous one'\n  }\n}\n\nexport { operationTypes }\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setSelectedOperation } from '../store/wizardSlice'\nimport { makeStyles, lighten } from '@material-ui/core/styles'\nimport { Paper, Typography } from '@material-ui/core'\nimport Checkbox from '@material-ui/core/Checkbox'\n\nimport { operationTypes } from '../common/constants'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flex: 1\n  },\n  operationType: {\n    margin: theme.spacing(3),\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'space-between',\n    backgroundColor: props => {\n      if (props.disabled) {\n        return theme.palette.grey[100]\n      }\n      if (props.checked) {\n        return lighten(theme.palette.primary.main, 0.9)\n      }\n      return ''\n    },\n    color: props => props.disabled ? theme.palette.grey[400] : '',\n    cursor: props => !props.disabled ? 'pointer' : 'auto'\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  }\n}))\n\nfunction OperationTypeCheckbox ({ operationType, checked, disabled, handleChange }) {\n  const classes = useStyles({ checked, disabled })\n  return (\n    <Paper\n      className={classes.operationType}\n      onClick={!disabled ? () => handleChange(!checked, operationType) : undefined}\n    >\n      <div>\n        <Typography variant='h5'>\n          {operationTypes[operationType].label}\n        </Typography>\n        <Typography>\n          {operationTypes[operationType].description}\n        </Typography>\n      </div>\n      <div>\n        <Checkbox\n          disabled={disabled}\n          checked={checked}\n          // onChange={() => handleChange(!checked, operationType)}\n          name={`${operationType}`}\n          color='primary'\n        />\n      </div>\n    </Paper>\n  )\n}\n\nfunction OperationTypePicker ({ selectedOperation }) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const handleChange = (checked, operationType) => {\n    if (checked) {\n      dispatch(setSelectedOperation(operationType))\n    } else {\n      dispatch(setSelectedOperation(undefined))\n    }\n  }\n  return (\n    <div className={classes.root}>\n      <OperationTypeCheckbox operationType='update_software' checked={selectedOperation === 'update_software'} handleChange={handleChange} />\n      <OperationTypeCheckbox operationType='downgrade_software' checked={selectedOperation === 'downgrade_software'} handleChange={handleChange} disabled />\n    </div>\n  )\n}\n\nexport default OperationTypePicker\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport OperationTypeControls from './OperationTypeControls'\nimport OperationTypePicker from './OperationTypePicker'\n\nfunction OperationTypeStep () {\n  const selectedOperation = useSelector((state) => state.wizard.selectedOperation)\n  return (\n    <>\n      <OperationTypePicker selectedOperation={selectedOperation} />\n      <OperationTypeControls isSelectedOperation={selectedOperation} />\n    </>\n  )\n}\n\nexport default OperationTypeStep\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { schedule, back, cancel } from '../store/wizardSlice'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  cancelButton: {\n    marginRight: theme.spacing(1)\n  },\n  backButton: {\n    marginRight: theme.spacing(1)\n  }\n}))\n\nfunction SummaryControls () {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const scheduleSent = useSelector(state => state.wizard.scheduleSent)\n\n  const handleScheduleClick = () => {\n    dispatch(schedule())\n  }\n\n  const handleCancelClick = () => {\n    dispatch(cancel())\n  }\n\n  const handleBackClick = () => {\n    dispatch(back())\n  }\n\n  return (\n    <div className={classes.root}>\n      <Button\n        className={classes.cancelButton}\n        onClick={handleCancelClick}\n      >\n        Cancel\n      </Button>\n      <Button\n        className={classes.cancelButton}\n        onClick={handleBackClick}\n      >\n        Back\n      </Button>\n      <Button\n        variant='contained'\n        color='primary'\n        onClick={handleScheduleClick}\n        disabled={scheduleSent}\n      >\n        Schedule\n      </Button>\n    </div>\n  )\n}\n\nexport default SummaryControls\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport SummaryControls from './SummaryControls'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Typography } from '@material-ui/core'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\n\nimport { operationTypes } from '../common/constants'\n\nconst useStyles = makeStyles((theme) => ({\n  summary: {\n    padding: theme.spacing(2),\n    flex: 1\n  },\n  tableContainer: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  },\n  sectionHeader: {\n    marginBottom: theme.spacing(2),\n    borderBottom: `1px solid ${theme.palette.grey[400]}`\n  }\n}))\n\nfunction SummaryStep () {\n  const classes = useStyles()\n\n  const selectedNetworkElements = useSelector((state) => state.wizard.selectedNetworkElements)\n  const selectedOperation = useSelector((state) => state.wizard.selectedOperation)\n  const selectedNetworkElementsData = useSelector((state) => state.networkElements.data.filter((el) => selectedNetworkElements.includes(el.id)))\n\n  return (\n    <>\n      <div className={classes.summary}>\n        <Typography variant='h5' className={classes.sectionHeader}>\n          Network Elements\n        </Typography>\n\n        <TableContainer component={Paper} className={classes.tableContainer}>\n          <Table aria-label='simple table'>\n            <TableHead>\n              <TableRow>\n                <TableCell>IP Address</TableCell>\n                <TableCell>NE Name</TableCell>\n                <TableCell>Technology</TableCell>\n                <TableCell>SW Version</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {selectedNetworkElementsData.map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell component='th' scope='row'>\n                    {row.ip}\n                  </TableCell>\n                  <TableCell align='left'>{row.name}</TableCell>\n                  <TableCell align='left'>{row.type}</TableCell>\n                  <TableCell align='left'>{row.swVersion}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        <Typography variant='h5' className={classes.sectionHeader}>\n          Operation Type\n        </Typography>\n        <Typography>\n          {operationTypes[selectedOperation].label}\n        </Typography>\n      </div>\n      <SummaryControls />\n    </>\n  )\n}\n\nexport default SummaryStep\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setToastOpen } from '../store/wizardSlice'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport MuiAlert from '@material-ui/lab/Alert'\n\nfunction Alert (props) {\n  return <MuiAlert elevation={6} variant='filled' {...props} />\n}\n\nfunction ScheduleToast ({ setScheduleToastOpen }) {\n  const dispatch = useDispatch()\n\n  const scheduleToastOpen = useSelector((state) => state.wizard.toast.open)\n  const success = useSelector((state) => state.wizard.toast.success)\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n\n    dispatch(setToastOpen(false))\n  }\n\n  let toast\n  if (success) {\n    toast = (\n      <Alert onClose={handleClose} severity='success'>\n        Successfully scheduled the operation!\n      </Alert>\n    )\n  } else {\n    toast = (\n      <Alert onClose={handleClose} severity='error'>\n        Something went wrong!\n      </Alert>\n    )\n  }\n\n  return (\n    <Snackbar open={scheduleToastOpen} autoHideDuration={2000} onClose={handleClose}>\n      {toast}\n    </Snackbar>\n  )\n}\n\nexport default ScheduleToast\n","import { createTheme } from '@material-ui/core/styles'\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#214191'\n    },\n    secondary: {\n      main: '#214191'\n    }\n  }\n})\n\nexport default theme\n","import React, { useEffect } from 'react'\nimport { loadNetworkElements } from './store/networkElementsSlice'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { MuiThemeProvider, makeStyles } from '@material-ui/core/styles'\n\nimport Header from './components/Header'\nimport Sidebar from './components/Sidebar'\nimport NetworkElementStep from './components/NetworkElementStep'\nimport OperationTypeStep from './components/OperationTypeStep'\nimport SummaryStep from './components/SummaryStep'\nimport ScheduleToast from './components/ScheduleToast'\nimport theme from './theme'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh'\n  },\n  container: {\n    display: 'flex',\n    flex: 1\n  },\n  nav: {\n    flex: 1\n  },\n  main: {\n    flex: 3,\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}))\nfunction Wizard () {\n  const classes = useStyles()\n  const activeStep = useSelector((state) => state.wizard.activeStep)\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(loadNetworkElements())\n  })\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <header>\n          <Header />\n        </header>\n        <section className={classes.container}>\n          <nav className={classes.nav}>\n            <Sidebar activeStep={activeStep} />\n          </nav>\n          <main className={classes.main}>\n            {(activeStep === 0 &&\n              <NetworkElementStep />\n            ) || (activeStep === 1 &&\n              <OperationTypeStep />\n            ) || (activeStep === 2 &&\n              <SummaryStep />\n            )}\n          </main>\n        </section>\n        <ScheduleToast />\n      </div>\n    </MuiThemeProvider>\n  )\n}\n\nexport default Wizard\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { Provider } from 'react-redux'\nimport store from './store/store'\nimport Wizard from './Wizard'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Wizard />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}